# R library for {{{packageName}}}

{{#appDescription}}
{{{appDescription}}}
{{/appDescription}}

This package is a library, which allows clients to access the pRed SPoTs and Integration Layer REST APIs from R code.
Please see below for details of how to install and get started.

- API version: {{appVersion}}
- Package version: {{packageVersion}}
{{^hideGenerationTimestamp}}
- Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}
{{#infoUrl}}
For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/infoUrl}}

## Installation

### Requirements

You'll need the `devtools` package in order to build the API.
Make sure you have a proper CRAN repository from which you can download packages.

Install the `devtools` package with the following command.
```R
if(!require(devtools)) { install.packages("devtools") }
```

The API client depends on the `httr` package. We support version `3.2.1`.

Install the `httr` package with the following command.
```R
if(!require(httr)) { install.packages("httr") }
```

### Installation of the API package
Make sure you set the working directory to where the API code is located.
Then execute
```R
devtools::document()
devtools::install()
```

## Getting Started
Please follow the [installation procedure](#installation).
{{> ../common/configure_environment}}

The package can be loaded for development using:
```R
devtools::load_all()
```

Then you can use APIs as follows:
```R
# Either explicitly set client configuration in R, or use environment variables as described above
host = 'inception-dev.genestack.com'
token = '[API token]'

# Create a client object and an object representing the study SPoT
client  = ApiClient$new(host = host, token = token)
study_api = StudySPoTApi$new(client)
```

We may add a new study:
```R
source = StudySource$new(name = 'R client study',
                         description = 'My programmatically-added study')
response = study_api$add_study(source)

# And check that we receive HTTP CREATED status (201)
require(httr)
print(http_status(response$response)$message)

# And view the added study
print(response$content)
```

And search for it (please allow time for indexing):
```R
queryResult <- study_api$search_objects(query = 'programmatically')

# We may view the response as a parsed R object
print(queryResult$content)

# Or we may view the raw JSON
print(queryResult$json)
```

## Generating documentation/manual
Generate `*.Rd` files with:

```bash
R -e "devtools::document()"
```

and then generate the PDF manual with:

```bash
R CMD Rd2pdf ./ --output=manual.pdf --no-index --no-preview --force
```

## Author

{{#apiInfo}}{{#apis}}{{^hasMore}}{{infoEmail}}
{{/hasMore}}{{/apis}}{{/apiInfo}}
