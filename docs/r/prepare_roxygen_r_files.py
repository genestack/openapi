#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import re
import argparse


def prettify_roxygen_file(filename):
    with open(filename, 'r') as input_file:
        input_text = input_file.readlines()

    output_text = []
    for row in input_text:
        if not row.startswith('#\''):
            # It's not a roxygen row, just add to output text
            output_text.append(row)
            continue
        else:
            output_text.append(prettify_roxygen_row(row))

    with open(filename, 'w') as output_file:
        output_file.writelines(output_text)


def prettify_roxygen_row(row):
    # Remove additional backslash before `"`
    processed = re.sub(r'\\"', r'"', row)
    # This fix some really strage problem when `"` leads to "} in result .pdf file
    processed = re.sub(r'`"`', r'"', processed)
    # % sign should be escaped
    processed = re.sub(r'%', r'\%', processed)
    # Create strong sections
    processed = re.sub(r'__.*?__', lambda x: '\\strong{%s}' % re.sub('__', '', x.group()), processed)
    # Create code sections
    processed = re.sub(r'`.*?`', lambda x: '\\code{%s}' % re.sub('`', '', x.group()), processed)

    if '##' not in processed:
        return processed
    else:
        return create_describe_rd_section(processed)


def create_describe_rd_section(row):
    output_text = []

    subrows = row.strip().split('  ')
    output_text.append(subrows[0])
    output_text.append('#\' \describe{')

    new_subsection = False
    for subrow in subrows[1:]:
        if subrow.startswith('##'):
            new_subsection = True
            output_text.append('#\' \item{%s:}' % re.sub('## ', '', subrow))
        else:
            if new_subsection:
                new_subsection = False
                output_text[-1] = output_text[-1] + ('{%s}' % subrow)
            else:
                output_text[-1] = output_text[-1][:-1] + ' ' + subrow + '}'

    output_text.append('#\' }')
    return '\n'.join(output_text) + '\n'


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--source-folder', dest='source_folder', type=str,
                        help='Path to R/ folder with .r files generated by swagger')
    args = parser.parse_args()

    filenames = os.listdir(args.source_folder)
    for filename in filenames:
        prettify_roxygen_file(os.path.join(args.source_folder, filename))
