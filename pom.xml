<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>main</artifactId>
    <groupId>com.genestack.odm-openapi</groupId>
    <version>${revision}</version>

    <properties>
        <!--suppress UnresolvedMavenProperty -->
        <revision>${env.ODM_OPENAPI_VERSION}</revision>
        <!--REST configurations-->
        <integrationCurator.app>integrationCurator</integrationCurator.app>
        <integrationCurator.package>integration_curator</integrationCurator.package>
        <integrationUser.app>integrationUser</integrationUser.app>
        <integrationUser.package>integration_user</integrationUser.package>
        <studyCurator.app>studyCurator</studyCurator.app>
        <studyCurator.package>study_curator</studyCurator.package>
        <studyUser.app>studyUser</studyUser.app>
        <studyUser.package>study_user</studyUser.package>
        <sampleCurator.app>sampleCurator</sampleCurator.app>
        <sampleCurator.package>sample_curator</sampleCurator.package>
        <sampleUser.app>sampleUser</sampleUser.app>
        <sampleUser.package>sample_user</sampleUser.package>
        <libraryCurator.app>libraryCurator</libraryCurator.app>
        <libraryCurator.package>library_curator</libraryCurator.package>
        <libraryUser.app>libraryUser</libraryUser.app>
        <libraryUser.package>library_user</libraryUser.package>
        <preparationCurator.app>preparationCurator</preparationCurator.app>
        <preparationCurator.package>preparation_curator</preparationCurator.package>
        <preparationUser.app>preparationUser</preparationUser.app>
        <preparationUser.package>preparation_user</preparationUser.package>
        <variantCurator.app>variantCurator</variantCurator.app>
        <variantCurator.package>variant_curator</variantCurator.package>
        <variantUser.app>variantUser</variantUser.app>
        <variantUser.package>variant_user</variantUser.package>
        <flowCytometryCurator.app>flowCytometryCurator</flowCytometryCurator.app>
        <flowCytometryCurator.package>flow_cytometry_curator</flowCytometryCurator.package>
        <flowCytometryUser.app>flowCytometryUser</flowCytometryUser.app>
        <flowCytometryUser.package>flow_cytometry_user</flowCytometryUser.package>
        <expressionCurator.app>expressionCurator</expressionCurator.app>
        <expressionCurator.package>expression_curator</expressionCurator.package>
        <expressionUser.app>expressionUser</expressionUser.app>
        <expressionUser.package>expression_user</expressionUser.package>
        <tasks.app>tasks</tasks.app>
        <tasks.package>tasks</tasks.package>
        <job.app>job</job.app>
        <job.package>job</job.package>
        <manageData.app>manageData</manageData.app>
        <manageData.package>manage_data</manageData.package>
        <scimGroups.app>scimGroups</scimGroups.app>
        <scimGroups.package>scim_groups</scimGroups.package>
        <scimUsers.app>scimUsers</scimUsers.app>
        <scimUsers.package>scim_users</scimUsers.package>
        <referenceData.app>reference-data</referenceData.app>
        <referenceData.package>reference_data</referenceData.package>
    </properties>



    <build>
        <plugins>
            <!-- Generate APIs -->
            <plugin>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-codegen-maven-plugin</artifactId>
                <version>2.4.37</version>
                <configuration>
                    <inputSpec/>
                    <output/>
                    <language/>
                    <configOptions>
                        <!-- read from VERSION file in the root of repository -->
                        <packageVersion>${project.version}</packageVersion>
                    </configOptions>
                    <ignoreFileOverride>client/templates/.swagger-codegen-ignore</ignoreFileOverride>
                    <generateApiTests>false</generateApiTests>
                    <generateModelTests>false</generateModelTests>
                </configuration>
                <executions>
                    <!--Clients-->
                    <!--python client for integration-->
                    <execution>
                        <id>python for ${integrationCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${integrationCurator.package}</packageName>
                                <projectName>${integrationCurator.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${integrationCurator.app}.yaml</inputSpec>
                            <output>generated/python/${integrationCurator.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python for ${integrationUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${integrationUser.package}</packageName>
                                <projectName>${integrationUser.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${integrationUser.app}.yaml</inputSpec>
                            <output>generated/python/${integrationUser.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <!--python client for study-->
                    <execution>
                        <id>python for ${studyCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${studyCurator.package}</packageName>
                                <projectName>${studyCurator.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${studyCurator.app}.yaml</inputSpec>
                            <output>generated/python/${studyCurator.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python for ${studyUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${studyUser.package}</packageName>
                                <projectName>${studyUser.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${studyUser.app}.yaml</inputSpec>
                            <output>generated/python/${studyUser.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <!--python client for sample-->
                    <execution>
                        <id>python for ${sampleCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${sampleCurator.package}</packageName>
                                <projectName>${sampleCurator.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${sampleCurator.app}.yaml</inputSpec>
                            <output>generated/python/${sampleCurator.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python for ${sampleUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${sampleUser.package}</packageName>
                                <projectName>${sampleUser.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${sampleUser.app}.yaml</inputSpec>
                            <output>generated/python/${sampleUser.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <!--python client for library-->
                    <execution>
                        <id>python for ${libraryCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${libraryCurator.package}</packageName>
                                <projectName>${libraryCurator.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${libraryCurator.app}.yaml</inputSpec>
                            <output>generated/python/${libraryCurator.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python for ${libraryUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${libraryUser.package}</packageName>
                                <projectName>${libraryUser.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${libraryUser.app}.yaml</inputSpec>
                            <output>generated/python/${libraryUser.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <!--python client for preparations-->
                    <execution>
                        <id>python for ${preparationCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${preparationCurator.package}</packageName>
                                <projectName>${preparationCurator.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${preparationCurator.app}.yaml</inputSpec>
                            <output>generated/python/${preparationCurator.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python for ${preparationUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${preparationUser.package}</packageName>
                                <projectName>${preparationUser.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${preparationUser.app}.yaml</inputSpec>
                            <output>generated/python/${preparationUser.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <!--python client for variant-->
                    <execution>
                        <id>python for ${variantCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${variantCurator.package}</packageName>
                                <projectName>${variantCurator.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${variantCurator.app}.yaml</inputSpec>
                            <output>generated/python/${variantCurator.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python for ${variantUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${variantUser.package}</packageName>
                                <projectName>${variantUser.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${variantUser.app}.yaml</inputSpec>
                            <output>generated/python/${variantUser.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <!--python client for flow-cytometry-->
                    <execution>
                        <id>python for ${flowCytometryCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${flowCytometryCurator.package}</packageName>
                                <projectName>${flowCytometryCurator.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${flowCytometryCurator.app}.yaml</inputSpec>
                            <output>generated/python/${flowCytometryCurator.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python for ${flowCytometryUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${flowCytometryUser.package}</packageName>
                                <projectName>${flowCytometryUser.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${flowCytometryUser.app}.yaml</inputSpec>
                            <output>generated/python/${flowCytometryUser.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <!--python client for expression-->
                    <execution>
                        <id>python for ${expressionCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${expressionCurator.package}</packageName>
                                <projectName>${expressionCurator.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${expressionCurator.app}.yaml</inputSpec>
                            <output>generated/python/${expressionCurator.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python for ${expressionUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${expressionUser.package}</packageName>
                                <projectName>${expressionUser.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${expressionUser.app}.yaml</inputSpec>
                            <output>generated/python/${expressionUser.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <!--python client for tasks-->
                    <execution>
                        <id>python for ${tasks.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${tasks.package}</packageName>
                                <projectName>${tasks.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${tasks.app}.yaml</inputSpec>
                            <output>generated/python/${tasks.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python for ${job.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${job.package}</packageName>
                                <projectName>${job.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${job.app}.yaml</inputSpec>
                            <output>generated/python/${job.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python for ${manageData.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${manageData.package}</packageName>
                                <projectName>${manageData.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${manageData.app}.yaml</inputSpec>
                            <output>generated/python/${manageData.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python for ${referenceData.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${referenceData.package}</packageName>
                                <projectName>${referenceData.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${referenceData.app}.yaml</inputSpec>
                            <output>generated/python/${referenceData.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python for ${scimGroups.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${scimGroups.package}</packageName>
                                <projectName>${scimGroups.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${scimGroups.app}.yaml</inputSpec>
                            <output>generated/python/${scimGroups.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python for ${scimUsers.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${scimUsers.package}</packageName>
                                <projectName>${scimUsers.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/python</templateDirectory>
                            <inputSpec>openapi/default/${scimUsers.app}.yaml</inputSpec>
                            <output>generated/python/${scimUsers.app}</output>
                            <language>python</language>
                        </configuration>
                    </execution>

                    <!--r client for integration-->
                    <execution>
                        <id>r for ${integrationCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${integrationCurator.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${integrationCurator.app}.yaml</inputSpec>
                            <output>generated/r/${integrationCurator.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>r for ${integrationUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${integrationUser.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${integrationUser.app}.yaml</inputSpec>
                            <output>generated/r/${integrationUser.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <!--r client for study-->
                    <execution>
                        <id>r for ${studyCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${studyCurator.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${studyCurator.app}.yaml</inputSpec>
                            <output>generated/r/${studyCurator.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>r for ${studyUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${studyUser.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${studyUser.app}.yaml</inputSpec>
                            <output>generated/r/${studyUser.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <!--r client for sample-->
                    <execution>
                        <id>r for ${sampleCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${sampleCurator.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${sampleCurator.app}.yaml</inputSpec>
                            <output>generated/r/${sampleCurator.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>r for ${sampleUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${sampleUser.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${sampleUser.app}.yaml</inputSpec>
                            <output>generated/r/${sampleUser.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <!--r client for library-->
                    <execution>
                        <id>r for ${libraryCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${libraryCurator.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${libraryCurator.app}.yaml</inputSpec>
                            <output>generated/r/${libraryCurator.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>r for ${libraryUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${libraryUser.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${libraryUser.app}.yaml</inputSpec>
                            <output>generated/r/${libraryUser.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <!--r client for preparation-->
                    <execution>
                        <id>r for ${preparationCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${preparationCurator.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${preparationCurator.app}.yaml</inputSpec>
                            <output>generated/r/${preparationCurator.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>r for ${preparationUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${preparationUser.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${preparationUser.app}.yaml</inputSpec>
                            <output>generated/r/${preparationUser.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <!--r client for variant-->
                    <execution>
                        <id>r for ${variantCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${variantCurator.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${variantCurator.app}.yaml</inputSpec>
                            <output>generated/r/${variantCurator.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>r for ${variantUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${variantUser.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${variantUser.app}.yaml</inputSpec>
                            <output>generated/r/${variantUser.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <!--r client for flow-cytometry-->
                    <execution>
                        <id>r for ${flowCytometryCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${flowCytometryCurator.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${flowCytometryCurator.app}.yaml</inputSpec>
                            <output>generated/r/${flowCytometryCurator.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>r for ${flowCytometryUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${flowCytometryUser.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${flowCytometryUser.app}.yaml</inputSpec>
                            <output>generated/r/${flowCytometryUser.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <!--r client for expression-->
                    <execution>
                        <id>r for ${expressionCurator.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${expressionCurator.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${expressionCurator.app}.yaml</inputSpec>
                            <output>generated/r/${expressionCurator.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>r for ${expressionUser.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${expressionUser.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${expressionUser.app}.yaml</inputSpec>
                            <output>generated/r/${expressionUser.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <!--r client for tasks-->
                    <execution>
                        <id>r for ${tasks.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${tasks.app}</packageName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${tasks.app}.yaml</inputSpec>
                            <output>generated/r/${tasks.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>r for ${job.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${job.package}</packageName>
                                <projectName>${job.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${job.app}.yaml</inputSpec>
                            <output>generated/r/${job.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>r for ${manageData.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${manageData.package}</packageName>
                                <projectName>${manageData.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${manageData.app}.yaml</inputSpec>
                            <output>generated/r/${manageData.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>r for ${referenceData.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${referenceData.package}</packageName>
                                <projectName>${referenceData.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${referenceData.app}.yaml</inputSpec>
                            <output>generated/r/${referenceData.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>r for ${scimGroups.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${scimGroups.package}</packageName>
                                <projectName>${scimGroups.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${scimGroups.app}.yaml</inputSpec>
                            <output>generated/r/${scimGroups.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                    <execution>
                        <id>r for ${scimUsers.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configOptions>
                                <packageName>${scimUsers.package}</packageName>
                                <projectName>${scimUsers.app}</projectName>
                            </configOptions>
                            <templateDirectory>templates/r</templateDirectory>
                            <inputSpec>openapi/default/${scimUsers.app}.yaml</inputSpec>
                            <output>generated/r/${scimUsers.app}</output>
                            <language>r</language>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <executions>
                    <!--Docs for python-->
                    <execution>
                        <id>Documentation python ${integrationCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${integrationCurator.app}</argument>
                                <argument>${integrationCurator.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${integrationUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${integrationUser.app}</argument>
                                <argument>${integrationUser.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${studyCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${studyCurator.app}</argument>
                                <argument>${studyCurator.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${studyUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${studyUser.app}</argument>
                                <argument>${studyUser.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${sampleCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${sampleCurator.app}</argument>
                                <argument>${sampleCurator.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${sampleUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${sampleUser.app}</argument>
                                <argument>${sampleUser.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${libraryCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${libraryCurator.app}</argument>
                                <argument>${libraryCurator.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${libraryUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${libraryUser.app}</argument>
                                <argument>${libraryUser.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${preparationCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${preparationCurator.app}</argument>
                                <argument>${preparationCurator.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${preparationUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${preparationUser.app}</argument>
                                <argument>${preparationUser.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${variantCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${variantCurator.app}</argument>
                                <argument>${variantCurator.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${variantUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${variantUser.app}</argument>
                                <argument>${variantUser.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${flowCytometryCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${flowCytometryCurator.app}</argument>
                                <argument>${flowCytometryCurator.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${flowCytometryUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${flowCytometryUser.app}</argument>
                                <argument>${flowCytometryUser.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${expressionCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${expressionCurator.app}</argument>
                                <argument>${expressionCurator.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${expressionUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${expressionUser.app}</argument>
                                <argument>${expressionUser.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python ${tasks.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${tasks.app}</argument>
                                <argument>${tasks.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python for ${job.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${job.app}</argument>
                                <argument>${job.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python for ${manageData.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${manageData.app}</argument>
                                <argument>${manageData.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python for ${referenceData.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${referenceData.app}</argument>
                                <argument>${referenceData.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python for ${scimGroups.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${scimGroups.app}</argument>
                                <argument>${scimGroups.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation python for ${scimUsers.app}</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/python/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${scimUsers.app}</argument>
                                <argument>${scimUsers.package}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!--Docs for r-->
                    <execution>
                        <id>Documentation r ${integrationCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${integrationCurator.app}</argument>
                                <argument>${integrationCurator.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${integrationUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${integrationUser.app}</argument>
                                <argument>${integrationUser.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${studyCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${studyCurator.app}</argument>
                                <argument>${studyCurator.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${studyUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${studyUser.app}</argument>
                                <argument>${studyUser.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${sampleCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${sampleCurator.app}</argument>
                                <argument>${sampleCurator.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${sampleUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${sampleUser.app}</argument>
                                <argument>${sampleUser.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${libraryCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${libraryCurator.app}</argument>
                                <argument>${libraryCurator.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${libraryUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${libraryUser.app}</argument>
                                <argument>${libraryUser.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${preparationCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${preparationCurator.app}</argument>
                                <argument>${preparationCurator.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${preparationUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${preparationUser.app}</argument>
                                <argument>${preparationUser.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${variantCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${variantCurator.app}</argument>
                                <argument>${variantCurator.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${variantUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${variantUser.app}</argument>
                                <argument>${variantUser.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${flowCytometryCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${flowCytometryCurator.app}</argument>
                                <argument>${flowCytometryCurator.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${flowCytometryUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${flowCytometryUser.app}</argument>
                                <argument>${flowCytometryUser.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${expressionCurator.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${expressionCurator.app}</argument>
                                <argument>${expressionCurator.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${expressionUser.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${expressionUser.app}</argument>
                                <argument>${expressionUser.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${tasks.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${tasks.app}</argument>
                                <argument>${tasks.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${job.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${job.app}</argument>
                                <argument>${job.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${manageData.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${manageData.app}</argument>
                                <argument>${manageData.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${referenceData.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${referenceData.app}</argument>
                                <argument>${referenceData.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${scimGroups.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${scimGroups.app}</argument>
                                <argument>${scimGroups.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Documentation r ${scimUsers.app}</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docs/r/generate_documentation.sh</executable>
                            <arguments>
                                <argument>${scimUsers.app}</argument>
                                <argument>${scimUsers.app}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--Remove temp files after documentation generation-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <delete includeEmptyDirs="true">
                                    <fileset dir="generated"
                                             includes="**/.swagger-codegen-ignore"/>
                                    <fileset dir="generated"
                                             includes="**/.swagger-codegen/"/>
                                    <fileset dir="generated/python" includes="*/docs/"/>
                                    <fileset dir="generated/python" includes="*/README.md"/>
                                    <fileset dir="generated/python"
                                             includes="*/sphinx_docs/.doctrees/"/>
                                    <fileset dir="generated/python"
                                             includes="*/sphinx_docs/objects.inv"/>
                                    <fileset dir="generated/python"
                                             includes="*/sphinx_docs/.buildinfo"/>
                                    <fileset dir="generated/python" includes="**.pyc/"/>
                                    <fileset dir="generated/python"
                                             includes="*/*/source/"/>
                                    <fileset dir="generated/r"
                                             includes="*/.Rbuildignore"/>
                                </delete>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
