---
swagger: "2.0"
info:
  description: "This swagger page describes the integrationUser APIs for ODM. These\
    \ are typically used to find and retrieve study, sample and processed (signal)\
    \ data and metadata for a given query.\n\nBefore carrying out any API calls you\
    \ will need an API token. API tokens can be obtained under your profile within\
    \ the Genestack software. Further instructions can be found [here](https://odm-user-guide.readthedocs.io/en/latest/doc-odm-user-guide/getting-a-genestack-api-token.html).\n\
    \nTo try out calls in this swagger page:\n\n1.  Click the 'Authorize' button below\
    \ to enter your API token\n2.  Scroll to the 'Parameters' section for the method\
    \ you wish to try out and click the 'Try it out' button\n3.  Enter parameter values\
    \ that you wish to try\n4.  Scroll to the bottom of the Parameters section and\
    \ click the 'Execute' bar that appears\n\n\n The server response will be in the\
    \ section that follows."
  version: "default-released"
  title: "ODM Integration API"
host: "unused"
basePath: "/frontend/rs/genestack/integrationUser/default-released"
tags:
  - name: "Expression integration"
  - name: "Flow Cytometry integration"
  - name: "Library integration"
  - name: "Linkage"
  - name: "Omics queries"
  - name: "Preparation integration"
  - name: "Sample integration"
  - name: "Study integration"
  - name: "Variant integration"
schemes:
  - "https"
paths:
  /data-types:
    get:
      tags:
        - "Linkage"
      summary: "Lists all available data types."
      description: "This endpoint is for instructional uses and can be used to get\
        \ the latest list of Data Types."
      operationId: "getDataTypes"
      parameters: [ ]
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            type: "array"
            items:
              type: "string"
            uniqueItems: true
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /data-types/links:
    get:
      tags:
        - "Linkage"
      summary: "List all possible links between data types that match the specified\
        \ criteria."
      description: "This endpoint should be used for instructional needs, and can\
        \ be used in order to get the links between the Data Types."
      operationId: "getDataTypesLinks"
      parameters:
        - name: "type"
          in: "query"
          description: "Return only links with the specified data type."
          required: false
          type: "string"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SourceTypePair"
            uniqueItems: true
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/expression/by/library/{id}:
    get:
      tags:
        - "Expression integration"
      summary: "Retrieve expression run-level data by querying related library ID\
        \ (accession)"
      description: "## Versioning\nSpecific versions of omics data files (eg. GCT)\
        \ can be queried via the useVersions parameter. Different versions of an omics\
        \ data file are associated via their CHAIN_ID metadata value. This CHAIN_ID\
        \ can be supplied to the useVersions parameter along with the version number\
        \ or specific omics data file accessions to include them in the query. If\
        \ nothing is supplied to the useVersions parameter then only the active version\
        \ (which is usually the last one imported) is queried. This acts as a filter\
        \ before the rest of the query is carried out.\n\nExample usage:\nuseVersions=*\
        \ (query all versions, including those without CHAIN_IDs)\nuseVersions=v2\
        \ (query the second version. If there is no second version then the data file\
        \ is not queried)\nuseVersions=v1,v0 (query the first version and any data\
        \ files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3 (for omics data files\
        \ with a CHAIN_ID of GSCV002 query the third version)\nuseVersions=GSVC002:GSF00494,GSF000496\
        \ (for omics data files with a CHAIN_ID of GSCV002 query only the specific\
        \ accessions GSF00494 and GSF000496)\n\nRules for multiple CHAIN_IDs can be\
        \ supplied to the parameter using the ; separator.\n\n## Paging\nFor performance\
        \ reasons this endpoint returns results in \"pages\" of limited size. In order\
        \ to retrieve all matching results the client needs to request multiple pages\
        \ starting from an offset to the first result. You can do this using the pageOffset\
        \ query parameter. A value of 0 (the default) instructs the server to return\
        \ the first page of results, 100 would return a page of results starting from\
        \ the 101st result and so on. To return all results iterate through pages\
        \ using pageOffset values of `n * pageLimit` until the `resultsExhausted`\
        \ response field is true.\n\n"
      operationId: "getExpressionByLibrary"
      produces:
        - "application/json"
        - "text/tab-separated-values"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
        - name: "useVersions"
          in: "query"
          description: "Specify which versions of omics data files are used in the query.\
          \ By default the active version is used. See Versioning above. Syntax:\n\
          \n\\* or `v<version number>` or `<CHAIN_ID>`:`v<version number>` or `<CHAIN_ID>`:`<accession1,accession2,..>`"
          required: false
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/expression/by/preparation/{id}:
    get:
      tags:
        - "Expression integration"
      summary: "Retrieve expression run-level data by querying related preparation\
        \ ID (accession)"
      description: "## Versioning\nSpecific versions of omics data files (eg. GCT)\
        \ can be queried via the useVersions parameter. Different versions of an omics\
        \ data file are associated via their CHAIN_ID metadata value. This CHAIN_ID\
        \ can be supplied to the useVersions parameter along with the version number\
        \ or specific omics data file accessions to include them in the query. If\
        \ nothing is supplied to the useVersions parameter then only the active version\
        \ (which is usually the last one imported) is queried. This acts as a filter\
        \ before the rest of the query is carried out.\n\nExample usage:\nuseVersions=*\
        \ (query all versions, including those without CHAIN_IDs)\nuseVersions=v2\
        \ (query the second version. If there is no second version then the data file\
        \ is not queried)\nuseVersions=v1,v0 (query the first version and any data\
        \ files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3 (for omics data files\
        \ with a CHAIN_ID of GSCV002 query the third version)\nuseVersions=GSVC002:GSF00494,GSF000496\
        \ (for omics data files with a CHAIN_ID of GSCV002 query only the specific\
        \ accessions GSF00494 and GSF000496)\n\nRules for multiple CHAIN_IDs can be\
        \ supplied to the parameter using the ; separator.\n\n## Paging\nFor performance\
        \ reasons this endpoint returns results in \"pages\" of limited size. In order\
        \ to retrieve all matching results the client needs to request multiple pages\
        \ starting from an offset to the first result. You can do this using the pageOffset\
        \ query parameter. A value of 0 (the default) instructs the server to return\
        \ the first page of results, 100 would return a page of results starting from\
        \ the 101st result and so on. To return all results iterate through pages\
        \ using pageOffset values of `n * pageLimit` until the `resultsExhausted`\
        \ response field is true.\n\n"
      operationId: "getExpressionByPreparation"
      produces:
        - "application/json"
        - "text/tab-separated-values"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
        - name: "useVersions"
          in: "query"
          description: "Specify which versions of omics data files are used in the query.\
          \ By default the active version is used. See Versioning above. Syntax:\n\
          \n\\* or `v<version number>` or `<CHAIN_ID>`:`v<version number>` or `<CHAIN_ID>`:`<accession1,accession2,..>`"
          required: false
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/expression/by/sample/{id}:
    get:
      tags:
        - "Expression integration"
      summary: "Retrieve expression run-level data by querying related sample ID (accession)"
      description: "## Versioning\nSpecific versions of omics data files (eg. GCT)\
        \ can be queried via the useVersions parameter. Different versions of an omics\
        \ data file are associated via their CHAIN_ID metadata value. This CHAIN_ID\
        \ can be supplied to the useVersions parameter along with the version number\
        \ or specific omics data file accessions to include them in the query. If\
        \ nothing is supplied to the useVersions parameter then only the active version\
        \ (which is usually the last one imported) is queried. This acts as a filter\
        \ before the rest of the query is carried out.\n\nExample usage:\nuseVersions=*\
        \ (query all versions, including those without CHAIN_IDs)\nuseVersions=v2\
        \ (query the second version. If there is no second version then the data file\
        \ is not queried)\nuseVersions=v1,v0 (query the first version and any data\
        \ files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3 (for omics data files\
        \ with a CHAIN_ID of GSCV002 query the third version)\nuseVersions=GSVC002:GSF00494,GSF000496\
        \ (for omics data files with a CHAIN_ID of GSCV002 query only the specific\
        \ accessions GSF00494 and GSF000496)\n\nRules for multiple CHAIN_IDs can be\
        \ supplied to the parameter using the ; separator.\n\n## Paging\nFor performance\
        \ reasons this endpoint returns results in \"pages\" of limited size. In order\
        \ to retrieve all matching results the client needs to request multiple pages\
        \ starting from an offset to the first result. You can do this using the pageOffset\
        \ query parameter. A value of 0 (the default) instructs the server to return\
        \ the first page of results, 100 would return a page of results starting from\
        \ the 101st result and so on. To return all results iterate through pages\
        \ using pageOffset values of `n * pageLimit` until the `resultsExhausted`\
        \ response field is true.\n\n"
      operationId: "getExpressionBySample"
      produces:
        - "application/json"
        - "text/tab-separated-values"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
        - name: "useVersions"
          in: "query"
          description: "Specify which versions of omics data files are used in the query.\
          \ By default the active version is used. See Versioning above. Syntax:\n\
          \n\\* or `v<version number>` or `<CHAIN_ID>`:`v<version number>` or `<CHAIN_ID>`:`<accession1,accession2,..>`"
          required: false
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/expression/group/by/study/{id}:
    get:
      tags:
        - "Expression integration"
      summary: "Retrieve group metadata by querying study ID (accession)"
      description: "## Versioning\nSpecific versions of omics data files (eg. GCT)\
        \ can be queried via the useVersions parameter. Different versions of an omics\
        \ data file are associated via their CHAIN_ID metadata value. This CHAIN_ID\
        \ can be supplied to the useVersions parameter along with the version number\
        \ or specific omics data file accessions to include them in the query. If\
        \ nothing is supplied to the useVersions parameter then only the active version\
        \ (which is usually the last one imported) is queried. This acts as a filter\
        \ before the rest of the query is carried out.\n\nExample usage:\nuseVersions=*\
        \ (query all versions, including those without CHAIN_IDs)\nuseVersions=v2\
        \ (query the second version. If there is no second version then the data file\
        \ is not queried)\nuseVersions=v1,v0 (query the first version and any data\
        \ files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3 (for omics data files\
        \ with a CHAIN_ID of GSCV002 query the third version)\nuseVersions=GSVC002:GSF00494,GSF000496\
        \ (for omics data files with a CHAIN_ID of GSCV002 query only the specific\
        \ accessions GSF00494 and GSF000496)\n\nRules for multiple CHAIN_IDs can be\
        \ supplied to the parameter using the ; separator.\n\n"
      operationId: "getExpressionGroupsByStudy"
      produces:
        - "application/json"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "useVersions"
          in: "query"
          description: "Specify which versions of omics data files are used in the query.\
          \ By default the active version is used. See Versioning above. Syntax:\n\
          \n\\* or `v<version number>` or `<CHAIN_ID>`:`v<version number>` or `<CHAIN_ID>`:`<accession1,accession2,..>`"
          required: false
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is the object."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MetadataWithId"
        400:
          description: "The supplied object ID is invalid."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/expression/run-to-libraries/by/group/{id}:
    get:
      tags:
        - "Expression integration"
      summary: "Retrieve run-library pairs by group id. Pagination is based on unique\
        \ runs, not unique pairs."
      description: "## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size. In order to retrieve all matching results\
        \ the client needs to request multiple pages starting from an offset to the\
        \ first result. You can do this using the pageOffset query parameter. A value\
        \ of 0 (the default) instructs the server to return the first page of results,\
        \ 100 would return a page of results starting from the 101st result and so\
        \ on. To return all results iterate through pages using pageOffset values\
        \ of `n * pageLimit` until the `resultsExhausted` response field is true.\n\
        \n"
      operationId: "getRunToLibraryPairs"
      parameters:
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        404:
          description: "No object exists with the given ID."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/expression/run-to-preparations/by/group/{id}:
    get:
      tags:
        - "Expression integration"
      summary: "Retrieve run-preparation pairs by group id. Pagination is based on\
        \ unique runs, not unique pairs."
      description: "## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size. In order to retrieve all matching results\
        \ the client needs to request multiple pages starting from an offset to the\
        \ first result. You can do this using the pageOffset query parameter. A value\
        \ of 0 (the default) instructs the server to return the first page of results,\
        \ 100 would return a page of results starting from the 101st result and so\
        \ on. To return all results iterate through pages using pageOffset values\
        \ of `n * pageLimit` until the `resultsExhausted` response field is true.\n\
        \n"
      operationId: "getRunToPreparationPairs"
      parameters:
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        404:
          description: "No object exists with the given ID."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/expression/run-to-samples/by/group/{id}:
    get:
      tags:
        - "Expression integration"
      summary: "Retrieve run-sample pairs by group id. Pagination is based on unique\
        \ runs, not unique pairs."
      description: "## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size. In order to retrieve all matching results\
        \ the client needs to request multiple pages starting from an offset to the\
        \ first result. You can do this using the pageOffset query parameter. A value\
        \ of 0 (the default) instructs the server to return the first page of results,\
        \ 100 would return a page of results starting from the 101st result and so\
        \ on. To return all results iterate through pages using pageOffset values\
        \ of `n * pageLimit` until the `resultsExhausted` response field is true.\n\
        \n"
      operationId: "getExpressionRunToSamplePairs"
      parameters:
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        404:
          description: "No object exists with the given ID."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/flow-cytometry/by/sample/{id}:
    get:
      tags:
        - "Flow Cytometry integration"
      summary: "Retrieve flow cytometry run-level data by querying related sample\
        \ ID (accession)"
      description: "## Versioning\nSpecific versions of omics data files (eg. GCT)\
        \ can be queried via the useVersions parameter. Different versions of an omics\
        \ data file are associated via their CHAIN_ID metadata value. This CHAIN_ID\
        \ can be supplied to the useVersions parameter along with the version number\
        \ or specific omics data file accessions to include them in the query. If\
        \ nothing is supplied to the useVersions parameter then only the active version\
        \ (which is usually the last one imported) is queried. This acts as a filter\
        \ before the rest of the query is carried out.\n\nExample usage:\nuseVersions=*\
        \ (query all versions, including those without CHAIN_IDs)\nuseVersions=v2\
        \ (query the second version. If there is no second version then the data file\
        \ is not queried)\nuseVersions=v1,v0 (query the first version and any data\
        \ files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3 (for omics data files\
        \ with a CHAIN_ID of GSCV002 query the third version)\nuseVersions=GSVC002:GSF00494,GSF000496\
        \ (for omics data files with a CHAIN_ID of GSCV002 query only the specific\
        \ accessions GSF00494 and GSF000496)\n\nRules for multiple CHAIN_IDs can be\
        \ supplied to the parameter using the ; separator.\n\n## Paging\nFor performance\
        \ reasons this endpoint returns results in \"pages\" of limited size. In order\
        \ to retrieve all matching results the client needs to request multiple pages\
        \ starting from an offset to the first result. You can do this using the pageOffset\
        \ query parameter. A value of 0 (the default) instructs the server to return\
        \ the first page of results, 100 would return a page of results starting from\
        \ the 101st result and so on. To return all results iterate through pages\
        \ using pageOffset values of `n * pageLimit` until the `resultsExhausted`\
        \ response field is true.\n\n"
      operationId: "getFlowCytometryBySample"
      produces:
        - "application/json"
        - "text/tab-separated-values"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
        - name: "useVersions"
          in: "query"
          description: "Specify which versions of omics data files are used in the query.\
          \ By default the active version is used. See Versioning above. Syntax:\n\
          \n\\* or `v<version number>` or `<CHAIN_ID>`:`v<version number>` or `<CHAIN_ID>`:`<accession1,accession2,..>`"
          required: false
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/flow-cytometry/group/by/study/{id}:
    get:
      tags:
        - "Flow Cytometry integration"
      summary: "Retrieve group metadata by querying study ID (accession)"
      description: "## Versioning\nSpecific versions of omics data files (eg. GCT)\
        \ can be queried via the useVersions parameter. Different versions of an omics\
        \ data file are associated via their CHAIN_ID metadata value. This CHAIN_ID\
        \ can be supplied to the useVersions parameter along with the version number\
        \ or specific omics data file accessions to include them in the query. If\
        \ nothing is supplied to the useVersions parameter then only the active version\
        \ (which is usually the last one imported) is queried. This acts as a filter\
        \ before the rest of the query is carried out.\n\nExample usage:\nuseVersions=*\
        \ (query all versions, including those without CHAIN_IDs)\nuseVersions=v2\
        \ (query the second version. If there is no second version then the data file\
        \ is not queried)\nuseVersions=v1,v0 (query the first version and any data\
        \ files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3 (for omics data files\
        \ with a CHAIN_ID of GSCV002 query the third version)\nuseVersions=GSVC002:GSF00494,GSF000496\
        \ (for omics data files with a CHAIN_ID of GSCV002 query only the specific\
        \ accessions GSF00494 and GSF000496)\n\nRules for multiple CHAIN_IDs can be\
        \ supplied to the parameter using the ; separator.\n\n"
      operationId: "getFlowCytometryGroupsByStudy"
      produces:
        - "application/json"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "useVersions"
          in: "query"
          description: "Specify which versions of omics data files are used in the query.\
          \ By default the active version is used. See Versioning above. Syntax:\n\
          \n\\* or `v<version number>` or `<CHAIN_ID>`:`v<version number>` or `<CHAIN_ID>`:`<accession1,accession2,..>`"
          required: false
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is the object."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MetadataWithId"
        400:
          description: "The supplied object ID is invalid."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/flow-cytometry/run-to-samples/by/group/{id}:
    get:
      tags:
        - "Flow Cytometry integration"
      summary: "Retrieve run-sample pairs by group id. Pagination is based on unique\
        \ runs, not unique pairs."
      description: "## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size. In order to retrieve all matching results\
        \ the client needs to request multiple pages starting from an offset to the\
        \ first result. You can do this using the pageOffset query parameter. A value\
        \ of 0 (the default) instructs the server to return the first page of results,\
        \ 100 would return a page of results starting from the 101st result and so\
        \ on. To return all results iterate through pages using pageOffset values\
        \ of `n * pageLimit` until the `resultsExhausted` response field is true.\n\
        \n"
      operationId: "getFlowCytometryRunToSamplePairs"
      parameters:
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        404:
          description: "No object exists with the given ID."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/libraries/by/samples:
    get:
      tags:
        - "Library integration"
      summary: "Retrieve library metadata by querying related samples"
      description: "Retrieve library metadata objects whose linked sample metadata\
        \ matches all supplied conditions.\n\n## Conditions\nIt is possible to supply\
        \ conditions for:\n\n1. Samples (full-text or metadata key-value pair)\n2.\
        \ Parent studies (full-text or metadata key-value pair)\n3. Linked variant\
        \ objects (list of data key-value pairs)\n4. Linked expression objects (list\
        \ of data key-value pairs)\n5. Linked flow cytometry objects (list of data\
        \ key-value pairs)\n\n## Metadata full-text queries\nSingle words can be supplied\
        \ as is; otherwise, use speech marks (`\"`) to quote queries that include whitespace.\
        \ Speech marks and backslash characters in the query need to be escaped with\
        \ a backslash (`\\`).\n\n## Metadata filters\nMetadata filters are key-value\
        \ pairs joined by an operator. The `=` operator matches literal values/string.\
        \ The `!=` operator matches anything except the literal value/string. The\
        \ `<` or `>` operators match numerical results that are less or greater than\
        \ the supplied value. Strings containing whitespace need to be quoted with\
        \ (`\"`).\n\n## Data queries\nData queries must be a list of key-value pairs,\
        \ separated by whitespace. The set of valid keys depends on the specific query\
        \ type, and is documented in the query parameter summary. The values can be\
        \ simple non-whitespace strings, or strings enclosed by speech marks (`\"\
        `). Depending on the key, the value may be be a comma-delimited list of string\
        \ values. Others require numerical values. Ranges can be supplied with `(0:1)`\
        \ syntax, OR values with `|`.\n\n## Combinations\nMetadata queries/filters\
        \ for the same parameter can be combined with `&&`, `AND`, `||` and `OR` operators,\
        \ using white-space to separate out the terms and operators. Parentheses `(\
        \ )` can be used for complex expressions.\n\n## Versioning\nSpecific versions\
        \ of omics data files (eg. GCT) can be queried via the useVersions parameter.\
        \ Different versions of an omics data file are associated via their CHAIN_ID\
        \ metadata value. This CHAIN_ID can be supplied to the useVersions parameter\
        \ along with the version number or specific omics data file accessions to\
        \ include them in the query. If nothing is supplied to the useVersions parameter\
        \ then only the active version (which is usually the last one imported) is\
        \ queried. This acts as a filter before the rest of the query is carried out.\n\
        \nExample usage:\nuseVersions=* (query all versions, including those without\
        \ CHAIN_IDs)\nuseVersions=v2 (query the second version. If there is no second\
        \ version then the data file is not queried)\nuseVersions=v1,v0 (query the\
        \ first version and any data files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3\
        \ (for omics data files with a CHAIN_ID of GSCV002 query the third version)\n\
        useVersions=GSVC002:GSF00494,GSF000496 (for omics data files with a CHAIN_ID\
        \ of GSCV002 query only the specific accessions GSF00494 and GSF000496)\n\n\
        Rules for multiple CHAIN_IDs can be supplied to the parameter using the ;\
        \ separator.\n\n## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size. In order to retrieve all matching results\
        \ the client needs to request multiple pages starting from an offset to the\
        \ first result. You can do this using the pageOffset query parameter. A value\
        \ of 0 (the default) instructs the server to return the first page of results,\
        \ 100 would return a page of results starting from the 101st result and so\
        \ on. To return all results iterate through pages using pageOffset values\
        \ of `n * pageLimit` until the `resultsExhausted` response field is true.\n\
        \n"
      operationId: "getLibrariesBySamples"
      produces:
        - "application/json"
        - "text/tab-separated-values"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "filter"
          in: "query"
          description: "Filter by sample metadata (key-value metadata pair(s)). E.g.\
          \ `\"Species or strain\"=\"Homo sapiens\"`\n"
          required: false
          type: "string"
        - name: "query"
          in: "query"
          description: "Search for objects via a full-text query over all sample metadata\
          \ fields. E.g. `Clozapine`. Queries matching dictionary terms are automatically\
          \ expanded to include synonyms."
          required: false
          type: "string"
        - name: "searchSpecificTerms"
          in: "query"
          description: "If the full-text query term is present in an ODM dictionary,\
          \ enabling this parameter will modify the query to include child terms of\
          \ the full-text query.\n\nFor example, the search query \"Body fluid\" can\
          \ be expanded to include the term \"Blood\" (a child term of  \"Body fluid\"\
          ) so files containing either \"Body fluid\" or  \"Blood\"  in their metadata\
          \ will be returned in the search results.\n\nThe parent-child relationship\
          \ is defined by the key \"broaders\" or \"subClassOf\"  in the dictionary.\n\
          \nIf the full query term is not present in a dictionary then this parameter\
          \ has no effect."
          required: false
          type: "boolean"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/library/by/sample/{id}:
    get:
      tags:
        - "Library integration"
      summary: "Retrieve library metadata by querying related sample ID (accession)"
      description: ""
      operationId: "getLibraryBySample"
      produces:
        - "application/json"
        - "text/tab-separated-values"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Library"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/library/group/by/study/{id}:
    get:
      tags:
        - "Library integration"
      summary: "Retrieve group metadata by querying study ID (accession)"
      description: ""
      operationId: "getLibraryGroupsByStudy"
      produces:
        - "application/json"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
      responses:
        200:
          description: "The request was successful. The returned value is the object."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MetadataWithId"
        400:
          description: "The supplied object ID is invalid."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/library/libraries-to-samples/by/group/{id}:
    get:
      tags:
        - "Library integration"
      summary: "Retrieve library-samples pairs by group id. Pagination is based on\
        \ unique libraries, not unique pairs."
      description: "## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size. In order to retrieve all matching results\
        \ the client needs to request multiple pages starting from an offset to the\
        \ first result. You can do this using the pageOffset query parameter. A value\
        \ of 0 (the default) instructs the server to return the first page of results,\
        \ 100 would return a page of results starting from the 101st result and so\
        \ on. To return all results iterate through pages using pageOffset values\
        \ of `n * pageLimit` until the `resultsExhausted` response field is true.\n\
        \n"
      operationId: "getLibraryLinksToSamples"
      parameters:
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        404:
          description: "No object exists with the given ID."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/preparation/by/sample/{id}:
    get:
      tags:
        - "Preparation integration"
      summary: "Retrieve preparation metadata by querying related sample ID (accession)"
      description: ""
      operationId: "getPreparationBySample"
      produces:
        - "application/json"
        - "text/tab-separated-values"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Preparation"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/preparation/group/by/study/{id}:
    get:
      tags:
        - "Preparation integration"
      summary: "Retrieve group metadata by querying study ID (accession)"
      description: ""
      operationId: "getPreparationGroupsByStudy"
      produces:
        - "application/json"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
      responses:
        200:
          description: "The request was successful. The returned value is the object."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MetadataWithId"
        400:
          description: "The supplied object ID is invalid."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/preparation/preparations-to-samples/by/group/{id}:
    get:
      tags:
        - "Preparation integration"
      summary: "Retrieve run-sample pairs by group id. Pagination is based on unique\
        \ preparations, not unique pairs."
      description: "## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size. In order to retrieve all matching results\
        \ the client needs to request multiple pages starting from an offset to the\
        \ first result. You can do this using the pageOffset query parameter. A value\
        \ of 0 (the default) instructs the server to return the first page of results,\
        \ 100 would return a page of results starting from the 101st result and so\
        \ on. To return all results iterate through pages using pageOffset values\
        \ of `n * pageLimit` until the `resultsExhausted` response field is true.\n\
        \n"
      operationId: "getPreparationLinksToSamples"
      parameters:
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        404:
          description: "No object exists with the given ID."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/preparations/by/samples:
    get:
      tags:
        - "Preparation integration"
      summary: "Retrieve preparation metadata by querying related samples"
      description: "Retrieve preparation metadata objects whose linked sample metadata\
        \ matches all supplied conditions.\n\n## Conditions\nIt is possible to supply\
        \ conditions for:\n\n1. Samples (full-text or metadata key-value pair)\n2.\
        \ Parent studies (full-text or metadata key-value pair)\n3. Linked variant\
        \ objects (list of data key-value pairs)\n4. Linked expression objects (list\
        \ of data key-value pairs)\n5. Linked flow cytometry objects (list of data\
        \ key-value pairs)\n\n## Metadata full-text queries\nSingle words can be supplied\
        \ as is; otherwise, use speech marks (`\"`) to quote queries that include whitespace.\
        \ Speech marks and backslash characters in the query need to be escaped with\
        \ a backslash (`\\`).\n\n## Metadata filters\nMetadata filters are key-value\
        \ pairs joined by an operator. The `=` operator matches literal values/string.\
        \ The `!=` operator matches anything except the literal value/string. The\
        \ `<` or `>` operators match numerical results that are less or greater than\
        \ the supplied value. Strings containing whitespace need to be quoted with\
        \ (`\"`).\n\n## Data queries\nData queries must be a list of key-value pairs,\
        \ separated by whitespace. The set of valid keys depends on the specific query\
        \ type, and is documented in the query parameter summary. The values can be\
        \ simple non-whitespace strings, or strings enclosed by speech marks (`\"\
        `). Depending on the key, the value may be be a comma-delimited list of string\
        \ values. Others require numerical values. Ranges can be supplied with `(0:1)`\
        \ syntax, OR values with `|`.\n\n## Combinations\nMetadata queries/filters\
        \ for the same parameter can be combined with `&&`, `AND`, `||` and `OR` operators,\
        \ using white-space to separate out the terms and operators. Parentheses `(\
        \ )` can be used for complex expressions.\n\n## Versioning\nSpecific versions\
        \ of omics data files (eg. GCT) can be queried via the useVersions parameter.\
        \ Different versions of an omics data file are associated via their CHAIN_ID\
        \ metadata value. This CHAIN_ID can be supplied to the useVersions parameter\
        \ along with the version number or specific omics data file accessions to\
        \ include them in the query. If nothing is supplied to the useVersions parameter\
        \ then only the active version (which is usually the last one imported) is\
        \ queried. This acts as a filter before the rest of the query is carried out.\n\
        \nExample usage:\nuseVersions=* (query all versions, including those without\
        \ CHAIN_IDs)\nuseVersions=v2 (query the second version. If there is no second\
        \ version then the data file is not queried)\nuseVersions=v1,v0 (query the\
        \ first version and any data files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3\
        \ (for omics data files with a CHAIN_ID of GSCV002 query the third version)\n\
        useVersions=GSVC002:GSF00494,GSF000496 (for omics data files with a CHAIN_ID\
        \ of GSCV002 query only the specific accessions GSF00494 and GSF000496)\n\n\
        Rules for multiple CHAIN_IDs can be supplied to the parameter using the ;\
        \ separator.\n\n## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size. In order to retrieve all matching results\
        \ the client needs to request multiple pages starting from an offset to the\
        \ first result. You can do this using the pageOffset query parameter. A value\
        \ of 0 (the default) instructs the server to return the first page of results,\
        \ 100 would return a page of results starting from the 101st result and so\
        \ on. To return all results iterate through pages using pageOffset values\
        \ of `n * pageLimit` until the `resultsExhausted` response field is true.\n\
        \n"
      operationId: "getPreparationsBySamples"
      produces:
        - "application/json"
        - "text/tab-separated-values"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "filter"
          in: "query"
          description: "Filter by sample metadata (key-value metadata pair(s)). E.g.\
          \ `\"Species or strain\"=\"Homo sapiens\"`\n"
          required: false
          type: "string"
        - name: "query"
          in: "query"
          description: "Search for objects via a full-text query over all sample metadata\
          \ fields. E.g. `Clozapine`. Queries matching dictionary terms are automatically\
          \ expanded to include synonyms."
          required: false
          type: "string"
        - name: "searchSpecificTerms"
          in: "query"
          description: "If the full-text query term is present in an ODM dictionary,\
          \ enabling this parameter will modify the query to include child terms of\
          \ the full-text query.\n\nFor example, the search query \"Body fluid\" can\
          \ be expanded to include the term \"Blood\" (a child term of  \"Body fluid\"\
          ) so files containing either \"Body fluid\" or  \"Blood\"  in their metadata\
          \ will be returned in the search results.\n\nThe parent-child relationship\
          \ is defined by the key \"broaders\" or \"subClassOf\"  in the dictionary.\n\
          \nIf the full query term is not present in a dictionary then this parameter\
          \ has no effect."
          required: false
          type: "boolean"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/samples/by/libraries:
    get:
      tags:
        - "Sample integration"
      summary: "Retrieve sample metadata by querying related libraries"
      description: "Retrieve sample metadata objects whose linked library metadata\
        \ matches all supplied conditions.\n\n## Conditions\nIt is possible to supply\
        \ conditions for:\n\n1. Samples (full-text or metadata key-value pair)\n2.\
        \ Parent studies (full-text or metadata key-value pair)\n3. Linked variant\
        \ objects (list of data key-value pairs)\n4. Linked expression objects (list\
        \ of data key-value pairs)\n5. Linked flow cytometry objects (list of data\
        \ key-value pairs)\n\n## Metadata full-text queries\nSingle words can be supplied\
        \ as is; otherwise, use speech marks (`\"`) to quote queries that include whitespace.\
        \ Speech marks and backslash characters in the query need to be escaped with\
        \ a backslash (`\\`).\n\n## Metadata filters\nMetadata filters are key-value\
        \ pairs joined by an operator. The `=` operator matches literal values/string.\
        \ The `!=` operator matches anything except the literal value/string. The\
        \ `<` or `>` operators match numerical results that are less or greater than\
        \ the supplied value. Strings containing whitespace need to be quoted with\
        \ (`\"`).\n\n## Data queries\nData queries must be a list of key-value pairs,\
        \ separated by whitespace. The set of valid keys depends on the specific query\
        \ type, and is documented in the query parameter summary. The values can be\
        \ simple non-whitespace strings, or strings enclosed by speech marks (`\"\
        `). Depending on the key, the value may be be a comma-delimited list of string\
        \ values. Others require numerical values. Ranges can be supplied with `(0:1)`\
        \ syntax, OR values with `|`.\n\n## Combinations\nMetadata queries/filters\
        \ for the same parameter can be combined with `&&`, `AND`, `||` and `OR` operators,\
        \ using white-space to separate out the terms and operators. Parentheses `(\
        \ )` can be used for complex expressions.\n\n## Versioning\nSpecific versions\
        \ of omics data files (eg. GCT) can be queried via the useVersions parameter.\
        \ Different versions of an omics data file are associated via their CHAIN_ID\
        \ metadata value. This CHAIN_ID can be supplied to the useVersions parameter\
        \ along with the version number or specific omics data file accessions to\
        \ include them in the query. If nothing is supplied to the useVersions parameter\
        \ then only the active version (which is usually the last one imported) is\
        \ queried. This acts as a filter before the rest of the query is carried out.\n\
        \nExample usage:\nuseVersions=* (query all versions, including those without\
        \ CHAIN_IDs)\nuseVersions=v2 (query the second version. If there is no second\
        \ version then the data file is not queried)\nuseVersions=v1,v0 (query the\
        \ first version and any data files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3\
        \ (for omics data files with a CHAIN_ID of GSCV002 query the third version)\n\
        useVersions=GSVC002:GSF00494,GSF000496 (for omics data files with a CHAIN_ID\
        \ of GSCV002 query only the specific accessions GSF00494 and GSF000496)\n\n\
        Rules for multiple CHAIN_IDs can be supplied to the parameter using the ;\
        \ separator.\n\n## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size. In order to retrieve all matching results\
        \ the client needs to request multiple pages starting from an offset to the\
        \ first result. You can do this using the pageOffset query parameter. A value\
        \ of 0 (the default) instructs the server to return the first page of results,\
        \ 100 would return a page of results starting from the 101st result and so\
        \ on. To return all results iterate through pages using pageOffset values\
        \ of `n * pageLimit` until the `resultsExhausted` response field is true.\n\
        \n"
      operationId: "getSamplesByLibraries"
      produces:
        - "application/json"
        - "text/tab-separated-values"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "filter"
          in: "query"
          description: "Filter by library metadata (key-value metadata pair(s)). E.g.\
          \ `\"Library Type\"=RNA-Seq-1`"
          required: false
          type: "string"
        - name: "query"
          in: "query"
          description: "Search for library objects via a full-text query over all library\
          \ metadata fields. E.g. `\"illumina HiSeq500\"`. Queries matching dictionary\
          \ terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "searchSpecificTerms"
          in: "query"
          description: "If the full-text query term is present in an ODM dictionary,\
          \ enabling this parameter will modify the query to include child terms of\
          \ the full-text query.\n\nFor example, the search query \"Body fluid\" can\
          \ be expanded to include the term \"Blood\" (a child term of  \"Body fluid\"\
          ) so files containing either \"Body fluid\" or  \"Blood\"  in their metadata\
          \ will be returned in the search results.\n\nThe parent-child relationship\
          \ is defined by the key \"broaders\" or \"subClassOf\"  in the dictionary.\n\
          \nIf the full query term is not present in a dictionary then this parameter\
          \ has no effect."
          required: false
          type: "boolean"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/samples/by/preparations:
    get:
      tags:
        - "Sample integration"
      summary: "Retrieve sample metadata by querying related preparations"
      description: "Retrieve sample metadata objects whose linked preparation metadata\
        \ matches all supplied conditions.\n\n## Conditions\nIt is possible to supply\
        \ conditions for:\n\n1. Samples (full-text or metadata key-value pair)\n2.\
        \ Parent studies (full-text or metadata key-value pair)\n3. Linked variant\
        \ objects (list of data key-value pairs)\n4. Linked expression objects (list\
        \ of data key-value pairs)\n5. Linked flow cytometry objects (list of data\
        \ key-value pairs)\n\n## Metadata full-text queries\nSingle words can be supplied\
        \ as is; otherwise, use speech marks (`\"`) to quote queries that include whitespace.\
        \ Speech marks and backslash characters in the query need to be escaped with\
        \ a backslash (`\\`).\n\n## Metadata filters\nMetadata filters are key-value\
        \ pairs joined by an operator. The `=` operator matches literal values/string.\
        \ The `!=` operator matches anything except the literal value/string. The\
        \ `<` or `>` operators match numerical results that are less or greater than\
        \ the supplied value. Strings containing whitespace need to be quoted with\
        \ (`\"`).\n\n## Data queries\nData queries must be a list of key-value pairs,\
        \ separated by whitespace. The set of valid keys depends on the specific query\
        \ type, and is documented in the query parameter summary. The values can be\
        \ simple non-whitespace strings, or strings enclosed by speech marks (`\"\
        `). Depending on the key, the value may be be a comma-delimited list of string\
        \ values. Others require numerical values. Ranges can be supplied with `(0:1)`\
        \ syntax, OR values with `|`.\n\n## Combinations\nMetadata queries/filters\
        \ for the same parameter can be combined with `&&`, `AND`, `||` and `OR` operators,\
        \ using white-space to separate out the terms and operators. Parentheses `(\
        \ )` can be used for complex expressions.\n\n## Versioning\nSpecific versions\
        \ of omics data files (eg. GCT) can be queried via the useVersions parameter.\
        \ Different versions of an omics data file are associated via their CHAIN_ID\
        \ metadata value. This CHAIN_ID can be supplied to the useVersions parameter\
        \ along with the version number or specific omics data file accessions to\
        \ include them in the query. If nothing is supplied to the useVersions parameter\
        \ then only the active version (which is usually the last one imported) is\
        \ queried. This acts as a filter before the rest of the query is carried out.\n\
        \nExample usage:\nuseVersions=* (query all versions, including those without\
        \ CHAIN_IDs)\nuseVersions=v2 (query the second version. If there is no second\
        \ version then the data file is not queried)\nuseVersions=v1,v0 (query the\
        \ first version and any data files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3\
        \ (for omics data files with a CHAIN_ID of GSCV002 query the third version)\n\
        useVersions=GSVC002:GSF00494,GSF000496 (for omics data files with a CHAIN_ID\
        \ of GSCV002 query only the specific accessions GSF00494 and GSF000496)\n\n\
        Rules for multiple CHAIN_IDs can be supplied to the parameter using the ;\
        \ separator.\n\n## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size. In order to retrieve all matching results\
        \ the client needs to request multiple pages starting from an offset to the\
        \ first result. You can do this using the pageOffset query parameter. A value\
        \ of 0 (the default) instructs the server to return the first page of results,\
        \ 100 would return a page of results starting from the 101st result and so\
        \ on. To return all results iterate through pages using pageOffset values\
        \ of `n * pageLimit` until the `resultsExhausted` response field is true.\n\
        \n"
      operationId: "getSamplesByPreparations"
      produces:
        - "application/json"
        - "text/tab-separated-values"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "filter"
          in: "query"
          description: "Filter by preparation metadata (key-value metadata pair(s)).\
          \ E.g. `Digestion=Trypsin`"
          required: false
          type: "string"
        - name: "query"
          in: "query"
          description: "Search for preparation objects via a full-text query over all\
          \ preparation metadata fields. E.g. `\"reversed-phase liquid chromatography\"\
          `. Queries matching dictionary terms are automatically expanded to include\
          \ synonyms."
          required: false
          type: "string"
        - name: "searchSpecificTerms"
          in: "query"
          description: "If the full-text query term is present in an ODM dictionary,\
          \ enabling this parameter will modify the query to include child terms of\
          \ the full-text query.\n\nFor example, the search query \"Body fluid\" can\
          \ be expanded to include the term \"Blood\" (a child term of  \"Body fluid\"\
          ) so files containing either \"Body fluid\" or  \"Blood\"  in their metadata\
          \ will be returned in the search results.\n\nThe parent-child relationship\
          \ is defined by the key \"broaders\" or \"subClassOf\"  in the dictionary.\n\
          \nIf the full query term is not present in a dictionary then this parameter\
          \ has no effect."
          required: false
          type: "boolean"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/samples/by/study/{id}:
    get:
      tags:
        - "Sample integration"
      summary: "Retrieve sample metadata by querying related study ID (accession)"
      description: "## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size. In order to retrieve all matching results\
        \ the client needs to request multiple pages starting from an offset to the\
        \ first result. You can do this using the pageOffset query parameter. A value\
        \ of 0 (the default) instructs the server to return the first page of results,\
        \ 100 would return a page of results starting from the 101st result and so\
        \ on. To return all results iterate through pages using pageOffset values\
        \ of `n * pageLimit` until the `resultsExhausted` response field is true.\n\
        \n"
      operationId: "getSamplesByStudy"
      produces:
        - "application/json"
        - "text/tab-separated-values"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/studies/by/libraries:
    get:
      tags:
        - "Study integration"
      summary: "Retrieve study metadata objects by querying related libraries"
      description: "Retrieve study metadata objects whose linked library metadata\
        \ matches all supplied conditions.\n\n## Conditions\nIt is possible to supply\
        \ conditions for:\n\n1. Samples (full-text or metadata key-value pair)\n2.\
        \ Parent studies (full-text or metadata key-value pair)\n3. Linked variant\
        \ objects (list of data key-value pairs)\n4. Linked expression objects (list\
        \ of data key-value pairs)\n5. Linked flow cytometry objects (list of data\
        \ key-value pairs)\n\n## Metadata full-text queries\nSingle words can be supplied\
        \ as is; otherwise, use speech marks (`\"`) to quote queries that include whitespace.\
        \ Speech marks and backslash characters in the query need to be escaped with\
        \ a backslash (`\\`).\n\n## Metadata filters\nMetadata filters are key-value\
        \ pairs joined by an operator. The `=` operator matches literal values/string.\
        \ The `!=` operator matches anything except the literal value/string. The\
        \ `<` or `>` operators match numerical results that are less or greater than\
        \ the supplied value. Strings containing whitespace need to be quoted with\
        \ (`\"`).\n\n## Data queries\nData queries must be a list of key-value pairs,\
        \ separated by whitespace. The set of valid keys depends on the specific query\
        \ type, and is documented in the query parameter summary. The values can be\
        \ simple non-whitespace strings, or strings enclosed by speech marks (`\"\
        `). Depending on the key, the value may be be a comma-delimited list of string\
        \ values. Others require numerical values. Ranges can be supplied with `(0:1)`\
        \ syntax, OR values with `|`.\n\n## Combinations\nMetadata queries/filters\
        \ for the same parameter can be combined with `&&`, `AND`, `||` and `OR` operators,\
        \ using white-space to separate out the terms and operators. Parentheses `(\
        \ )` can be used for complex expressions.\n\n## Versioning\nSpecific versions\
        \ of omics data files (eg. GCT) can be queried via the useVersions parameter.\
        \ Different versions of an omics data file are associated via their CHAIN_ID\
        \ metadata value. This CHAIN_ID can be supplied to the useVersions parameter\
        \ along with the version number or specific omics data file accessions to\
        \ include them in the query. If nothing is supplied to the useVersions parameter\
        \ then only the active version (which is usually the last one imported) is\
        \ queried. This acts as a filter before the rest of the query is carried out.\n\
        \nExample usage:\nuseVersions=* (query all versions, including those without\
        \ CHAIN_IDs)\nuseVersions=v2 (query the second version. If there is no second\
        \ version then the data file is not queried)\nuseVersions=v1,v0 (query the\
        \ first version and any data files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3\
        \ (for omics data files with a CHAIN_ID of GSCV002 query the third version)\n\
        useVersions=GSVC002:GSF00494,GSF000496 (for omics data files with a CHAIN_ID\
        \ of GSCV002 query only the specific accessions GSF00494 and GSF000496)\n\n\
        Rules for multiple CHAIN_IDs can be supplied to the parameter using the ;\
        \ separator.\n\n## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size. In order to retrieve all matching results\
        \ the client needs to request multiple pages starting from an offset to the\
        \ first result. You can do this using the pageOffset query parameter. A value\
        \ of 0 (the default) instructs the server to return the first page of results,\
        \ 100 would return a page of results starting from the 101st result and so\
        \ on. To return all results iterate through pages using pageOffset values\
        \ of `n * pageLimit` until the `resultsExhausted` response field is true.\n\
        \n"
      operationId: "getStudiesByLibraries"
      produces:
        - "application/json"
        - "text/tab-separated-values"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "filter"
          in: "query"
          description: "Filter by library metadata (key-value metadata pair(s)). E.g.\
          \ `\"Library Type\"=RNA-Seq-1`"
          required: false
          type: "string"
        - name: "query"
          in: "query"
          description: "Search for library objects via a full-text query over all library\
          \ metadata fields. E.g. `\"illumina HiSeq500\"`. Queries matching dictionary\
          \ terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "searchSpecificTerms"
          in: "query"
          description: "If the full-text query term is present in an ODM dictionary,\
          \ enabling this parameter will modify the query to include child terms of\
          \ the full-text query.\n\nFor example, the search query \"Body fluid\" can\
          \ be expanded to include the term \"Blood\" (a child term of  \"Body fluid\"\
          ) so files containing either \"Body fluid\" or  \"Blood\"  in their metadata\
          \ will be returned in the search results.\n\nThe parent-child relationship\
          \ is defined by the key \"broaders\" or \"subClassOf\"  in the dictionary.\n\
          \nIf the full query term is not present in a dictionary then this parameter\
          \ has no effect."
          required: false
          type: "boolean"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/studies/by/preparations:
    get:
      tags:
        - "Study integration"
      summary: "Retrieve study metadata objects by querying related preparations"
      description: "Retrieve study metadata objects whose linked preparation metadata\
        \ matches all supplied conditions.\n\n## Conditions\nIt is possible to supply\
        \ conditions for:\n\n1. Samples (full-text or metadata key-value pair)\n2.\
        \ Parent studies (full-text or metadata key-value pair)\n3. Linked variant\
        \ objects (list of data key-value pairs)\n4. Linked expression objects (list\
        \ of data key-value pairs)\n5. Linked flow cytometry objects (list of data\
        \ key-value pairs)\n\n## Metadata full-text queries\nSingle words can be supplied\
        \ as is; otherwise, use speech marks (`\"`) to quote queries that include whitespace.\
        \ Speech marks and backslash characters in the query need to be escaped with\
        \ a backslash (`\\`).\n\n## Metadata filters\nMetadata filters are key-value\
        \ pairs joined by an operator. The `=` operator matches literal values/string.\
        \ The `!=` operator matches anything except the literal value/string. The\
        \ `<` or `>` operators match numerical results that are less or greater than\
        \ the supplied value. Strings containing whitespace need to be quoted with\
        \ (`\"`).\n\n## Data queries\nData queries must be a list of key-value pairs,\
        \ separated by whitespace. The set of valid keys depends on the specific query\
        \ type, and is documented in the query parameter summary. The values can be\
        \ simple non-whitespace strings, or strings enclosed by speech marks (`\"\
        `). Depending on the key, the value may be be a comma-delimited list of string\
        \ values. Others require numerical values. Ranges can be supplied with `(0:1)`\
        \ syntax, OR values with `|`.\n\n## Combinations\nMetadata queries/filters\
        \ for the same parameter can be combined with `&&`, `AND`, `||` and `OR` operators,\
        \ using white-space to separate out the terms and operators. Parentheses `(\
        \ )` can be used for complex expressions.\n\n## Versioning\nSpecific versions\
        \ of omics data files (eg. GCT) can be queried via the useVersions parameter.\
        \ Different versions of an omics data file are associated via their CHAIN_ID\
        \ metadata value. This CHAIN_ID can be supplied to the useVersions parameter\
        \ along with the version number or specific omics data file accessions to\
        \ include them in the query. If nothing is supplied to the useVersions parameter\
        \ then only the active version (which is usually the last one imported) is\
        \ queried. This acts as a filter before the rest of the query is carried out.\n\
        \nExample usage:\nuseVersions=* (query all versions, including those without\
        \ CHAIN_IDs)\nuseVersions=v2 (query the second version. If there is no second\
        \ version then the data file is not queried)\nuseVersions=v1,v0 (query the\
        \ first version and any data files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3\
        \ (for omics data files with a CHAIN_ID of GSCV002 query the third version)\n\
        useVersions=GSVC002:GSF00494,GSF000496 (for omics data files with a CHAIN_ID\
        \ of GSCV002 query only the specific accessions GSF00494 and GSF000496)\n\n\
        Rules for multiple CHAIN_IDs can be supplied to the parameter using the ;\
        \ separator.\n\n## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size. In order to retrieve all matching results\
        \ the client needs to request multiple pages starting from an offset to the\
        \ first result. You can do this using the pageOffset query parameter. A value\
        \ of 0 (the default) instructs the server to return the first page of results,\
        \ 100 would return a page of results starting from the 101st result and so\
        \ on. To return all results iterate through pages using pageOffset values\
        \ of `n * pageLimit` until the `resultsExhausted` response field is true.\n\
        \n"
      operationId: "getStudiesByPreparations"
      produces:
        - "application/json"
        - "text/tab-separated-values"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "filter"
          in: "query"
          description: "Filter by preparation metadata (key-value metadata pair(s)).\
          \ E.g. `Digestion=Trypsin`"
          required: false
          type: "string"
        - name: "query"
          in: "query"
          description: "Search for preparation objects via a full-text query over all\
          \ preparation metadata fields. E.g. `\"reversed-phase liquid chromatography\"\
          `. Queries matching dictionary terms are automatically expanded to include\
          \ synonyms."
          required: false
          type: "string"
        - name: "searchSpecificTerms"
          in: "query"
          description: "If the full-text query term is present in an ODM dictionary,\
          \ enabling this parameter will modify the query to include child terms of\
          \ the full-text query.\n\nFor example, the search query \"Body fluid\" can\
          \ be expanded to include the term \"Blood\" (a child term of  \"Body fluid\"\
          ) so files containing either \"Body fluid\" or  \"Blood\"  in their metadata\
          \ will be returned in the search results.\n\nThe parent-child relationship\
          \ is defined by the key \"broaders\" or \"subClassOf\"  in the dictionary.\n\
          \nIf the full query term is not present in a dictionary then this parameter\
          \ has no effect."
          required: false
          type: "boolean"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/studies/by/samples:
    get:
      tags:
        - "Study integration"
      summary: "Retrieve study metadata objects by querying related samples"
      description: "Retrieve study metadata objects whose linked sample metadata matches\
        \ all supplied conditions.\n\n## Conditions\nIt is possible to supply conditions\
        \ for:\n\n1. Samples (full-text or metadata key-value pair)\n2. Parent studies\
        \ (full-text or metadata key-value pair)\n3. Linked variant objects (list\
        \ of data key-value pairs)\n4. Linked expression objects (list of data key-value\
        \ pairs)\n5. Linked flow cytometry objects (list of data key-value pairs)\n\
        \n## Metadata full-text queries\nSingle words can be supplied as is; otherwise,\
        \ use speech marks (`\"`) to quote queries that include whitespace. Speech\
        \ marks and backslash characters in the query need to be escaped with a backslash\
        \ (`\\`).\n\n## Metadata filters\nMetadata filters are key-value pairs joined\
        \ by an operator. The `=` operator matches literal values/string. The `!=`\
        \ operator matches anything except the literal value/string. The `<` or `>`\
        \ operators match numerical results that are less or greater than the supplied\
        \ value. Strings containing whitespace need to be quoted with (`\"`).\n\n\
        ## Data queries\nData queries must be a list of key-value pairs, separated\
        \ by whitespace. The set of valid keys depends on the specific query type,\
        \ and is documented in the query parameter summary. The values can be simple\
        \ non-whitespace strings, or strings enclosed by speech marks (`\"`). Depending\
        \ on the key, the value may be be a comma-delimited list of string values.\
        \ Others require numerical values. Ranges can be supplied with `(0:1)` syntax,\
        \ OR values with `|`.\n\n## Combinations\nMetadata queries/filters for the\
        \ same parameter can be combined with `&&`, `AND`, `||` and `OR` operators,\
        \ using white-space to separate out the terms and operators. Parentheses `(\
        \ )` can be used for complex expressions.\n\n## Versioning\nSpecific versions\
        \ of omics data files (eg. GCT) can be queried via the useVersions parameter.\
        \ Different versions of an omics data file are associated via their CHAIN_ID\
        \ metadata value. This CHAIN_ID can be supplied to the useVersions parameter\
        \ along with the version number or specific omics data file accessions to\
        \ include them in the query. If nothing is supplied to the useVersions parameter\
        \ then only the active version (which is usually the last one imported) is\
        \ queried. This acts as a filter before the rest of the query is carried out.\n\
        \nExample usage:\nuseVersions=* (query all versions, including those without\
        \ CHAIN_IDs)\nuseVersions=v2 (query the second version. If there is no second\
        \ version then the data file is not queried)\nuseVersions=v1,v0 (query the\
        \ first version and any data files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3\
        \ (for omics data files with a CHAIN_ID of GSCV002 query the third version)\n\
        useVersions=GSVC002:GSF00494,GSF000496 (for omics data files with a CHAIN_ID\
        \ of GSCV002 query only the specific accessions GSF00494 and GSF000496)\n\n\
        Rules for multiple CHAIN_IDs can be supplied to the parameter using the ;\
        \ separator.\n\n## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size. In order to retrieve all matching results\
        \ the client needs to request multiple pages starting from an offset to the\
        \ first result. You can do this using the pageOffset query parameter. A value\
        \ of 0 (the default) instructs the server to return the first page of results,\
        \ 100 would return a page of results starting from the 101st result and so\
        \ on. To return all results iterate through pages using pageOffset values\
        \ of `n * pageLimit` until the `resultsExhausted` response field is true.\n\
        \n"
      operationId: "getStudiesBySamples"
      produces:
        - "application/json"
        - "text/tab-separated-values"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "filter"
          in: "query"
          description: "Filter by sample metadata (key-value metadata pair(s)). E.g.\
          \ \"Species or strain\"=\"Homo sapiens\""
          required: false
          type: "string"
        - name: "query"
          in: "query"
          description: "Search for study metadata objects via a full-text query over\
          \ all sample metadata fields. E.g. \"RNA-Seq of human dendritic cells\"\
          . Queries matching dictionary terms are automatically expanded to include\
          \ synonyms."
          required: false
          type: "string"
        - name: "searchSpecificTerms"
          in: "query"
          description: "If the full-text query term is present in an ODM dictionary,\
          \ enabling this parameter will modify the query to include child terms of\
          \ the full-text query.\n\nFor example, the search query \"Body fluid\" can\
          \ be expanded to include the term \"Blood\" (a child term of  \"Body fluid\"\
          ) so files containing either \"Body fluid\" or  \"Blood\"  in their metadata\
          \ will be returned in the search results.\n\nThe parent-child relationship\
          \ is defined by the key \"broaders\" or \"subClassOf\"  in the dictionary.\n\
          \nIf the full query term is not present in a dictionary then this parameter\
          \ has no effect."
          required: false
          type: "boolean"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/study/by/sample/{id}:
    get:
      tags:
        - "Study integration"
      summary: "Retrieve study metadata by querying sample ID (accession)"
      description: ""
      operationId: "getStudyBySample"
      produces:
        - "application/json"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is the object."
          schema:
            $ref: "#/definitions/Study"
        400:
          description: "The supplied object ID is invalid."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/fulltext/search/studies:
    post:
      tags:
        - "Study integration"
      summary: "Find and retrieve studies via full-text or facet query"
      description: "Find studies and retrieve their data by searching via a full-text or facets
      search of study or linked objects metadata (e.g. samples, libraries, preparations, omics metadata).
      \ Only studies available to a user are returned.\n\n
      The endpoint returns:\n
      - a list of studies with their metadata summary\n
      - a list of facet objects with counts; the facet list can be configured in the \"Study Browser\"
      application using the \"Configure facets\" option (by a user with appropriate permissions).
      For each facet object only the first 5 most popular values are returned, these are sorted by the number of matching studies in descending order.
      \ Only studies available to the user are counted."
      operationId: "searchStudiesByFilter"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "request"
          required: true
          schema:
            $ref: "#/definitions/SearchStudyRequest"
      responses:
        200:
          description: "The request was successful. Retrieved studies and filters"
          schema:
            $ref: "#/definitions/FindObjectsResponse"
        400:
          description: "Invalid request body"
        401:
          description: "User is not authenticated. Please supply a valid Genestack\
              \ API token in the `Genestack-API-Token` HTTP header (this token may be\
              \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
              \ failure in the Genestack system, please file a bug report to support@genestack.com,\
              \ including the error details."
      security:
        - Genestack-API-Token: [ ]
  /integration/link/variant/by/sample/{id}:
    get:
      tags:
        - "Variant integration"
      summary: "Retrieve variant run-level data by querying related sample ID (accession)"
      description: "## Versioning\nSpecific versions of omics data files (eg. GCT)\
        \ can be queried via the useVersions parameter. Different versions of an omics\
        \ data file are associated via their CHAIN_ID metadata value. This CHAIN_ID\
        \ can be supplied to the useVersions parameter along with the version number\
        \ or specific omics data file accessions to include them in the query. If\
        \ nothing is supplied to the useVersions parameter then only the active version\
        \ (which is usually the last one imported) is queried. This acts as a filter\
        \ before the rest of the query is carried out.\n\nExample usage:\nuseVersions=*\
        \ (query all versions, including those without CHAIN_IDs)\nuseVersions=v2\
        \ (query the second version. If there is no second version then the data file\
        \ is not queried)\nuseVersions=v1,v0 (query the first version and any data\
        \ files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3 (for omics data files\
        \ with a CHAIN_ID of GSCV002 query the third version)\nuseVersions=GSVC002:GSF00494,GSF000496\
        \ (for omics data files with a CHAIN_ID of GSCV002 query only the specific\
        \ accessions GSF00494 and GSF000496)\n\nRules for multiple CHAIN_IDs can be\
        \ supplied to the parameter using the ; separator.\n\n## Paging\nFor performance\
        \ reasons this endpoint returns results in \"pages\" of limited size. In order\
        \ to retrieve all matching results the client needs to request multiple pages\
        \ starting from an offset to the first result. You can do this using the pageOffset\
        \ query parameter. A value of 0 (the default) instructs the server to return\
        \ the first page of results, 100 would return a page of results starting from\
        \ the 101st result and so on. To return all results iterate through pages\
        \ using pageOffset values of `n * pageLimit` until the `resultsExhausted`\
        \ response field is true.\n\n"
      operationId: "getVariantBySample"
      produces:
        - "application/json"
        - "text/tab-separated-values"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
        - name: "useVersions"
          in: "query"
          description: "Specify which versions of omics data files are used in the query.\
          \ By default the active version is used. See Versioning above. Syntax:\n\
          \n\\* or `v<version number>` or `<CHAIN_ID>`:`v<version number>` or `<CHAIN_ID>`:`<accession1,accession2,..>`"
          required: false
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/variant/group/by/study/{id}:
    get:
      tags:
        - "Variant integration"
      summary: "Retrieve group metadata by querying study ID (accession)"
      description: "## Versioning\nSpecific versions of omics data files (eg. GCT)\
        \ can be queried via the useVersions parameter. Different versions of an omics\
        \ data file are associated via their CHAIN_ID metadata value. This CHAIN_ID\
        \ can be supplied to the useVersions parameter along with the version number\
        \ or specific omics data file accessions to include them in the query. If\
        \ nothing is supplied to the useVersions parameter then only the active version\
        \ (which is usually the last one imported) is queried. This acts as a filter\
        \ before the rest of the query is carried out.\n\nExample usage:\nuseVersions=*\
        \ (query all versions, including those without CHAIN_IDs)\nuseVersions=v2\
        \ (query the second version. If there is no second version then the data file\
        \ is not queried)\nuseVersions=v1,v0 (query the first version and any data\
        \ files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3 (for omics data files\
        \ with a CHAIN_ID of GSCV002 query the third version)\nuseVersions=GSVC002:GSF00494,GSF000496\
        \ (for omics data files with a CHAIN_ID of GSCV002 query only the specific\
        \ accessions GSF00494 and GSF000496)\n\nRules for multiple CHAIN_IDs can be\
        \ supplied to the parameter using the ; separator.\n\n"
      operationId: "getVariantGroupsByStudy"
      produces:
        - "application/json"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "useVersions"
          in: "query"
          description: "Specify which versions of omics data files are used in the query.\
          \ By default the active version is used. See Versioning above. Syntax:\n\
          \n\\* or `v<version number>` or `<CHAIN_ID>`:`v<version number>` or `<CHAIN_ID>`:`<accession1,accession2,..>`"
          required: false
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
      responses:
        200:
          description: "The request was successful. The returned value is the object."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MetadataWithId"
        400:
          description: "The supplied object ID is invalid."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /integration/link/variant/run-to-samples/by/group/{id}:
    get:
      tags:
        - "Variant integration"
      summary: "Retrieve run-sample pairs by group id. Pagination is based on unique\
        \ runs, not unique pairs."
      description: "## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size. In order to retrieve all matching results\
        \ the client needs to request multiple pages starting from an offset to the\
        \ first result. You can do this using the pageOffset query parameter. A value\
        \ of 0 (the default) instructs the server to return the first page of results,\
        \ 100 would return a page of results starting from the 101st result and so\
        \ on. To return all results iterate through pages using pageOffset values\
        \ of `n * pageLimit` until the `resultsExhausted` response field is true.\n\
        \n"
      operationId: "getVariantRunToSamplePairs"
      parameters:
        - name: "id"
          in: "path"
          description: "Unique identifier (accession) of the object."
          required: true
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "Maximum number of results to return. This value must be between\
          \ 0 and 2000 (inclusive)."
          required: false
          type: "integer"
          format: "int32"
        - name: "pageOffset"
          in: "query"
          description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        404:
          description: "No object exists with the given ID."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /links:
    get:
      tags:
        - "Linkage"
      summary: "Finds existing links matching the specified criteria."
      description: "Please make sure that this endpoint should be used only for getting\
        \ all links to a specific object. In case you specify both firstId and secondId\
        \ an expected answer would be true for existing links and false for no link\
        \ between the objects."
      operationId: "getLinksByParams"
      parameters:
        - name: "firstId"
          in: "query"
          description: "Object ID (accession) (e.g. accession of study)"
          required: true
          type: "string"
        - name: "firstType"
          in: "query"
          description: "Type of the object (e.g. study)"
          required: false
          type: "string"
        - name: "secondId"
          in: "query"
          description: "Object ID (accession) (e.g. accession of study)"
          required: false
          type: "string"
        - name: "secondType"
          in: "query"
          description: "Type of the object (e.g. study)"
          required: false
          type: "string"
        - name: "offset"
          in: "query"
          description: "Param says to skip that many links before beginning to return\
          \ links."
          required: false
          type: "integer"
          default: 0
          format: "int32"
        - name: "limit"
          in: "query"
          description: "Param says to limit the count of returned links."
          required: false
          type: "integer"
          default: 1000
          format: "int32"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /links/get-batch:
    post:
      tags:
        - "Linkage"
      summary: "Finds existing links by passing many IDs. \nPagination goes through\
        \ all links matched the criteria."
      description: "Please make sure to use that endpoint for batch calls only. You\
        \ are not allowed to pass 'mixed' objects. e.g. Studies and Samples at the\
        \ same time. Please always specify firstType."
      operationId: "getLinksByIds"
      parameters:
        - in: "body"
          name: "request"
          required: false
          schema:
            $ref: "#/definitions/BatchOfIds"
      responses:
        200:
          description: "The request was successful. The returned value is a list of\
            \ objects."
          schema:
            $ref: "#/definitions/ListResponse"
        400:
          description: "Entities cannot be retrieved."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /omics/expression/data:
    get:
      tags:
        - "Omics queries"
      summary: "Retrieve expression data objects by searching across multiple data\
        \ types"
      description: "Retrieve expression data objects whose linked data matches all\
        \ supplied conditions.\n\nNote: An expression data query must be supplied.\n\
        \n## Conditions\nIt is possible to supply conditions for:\n\n1. Samples (full-text\
        \ or metadata key-value pair)\n2. Parent studies (full-text or metadata key-value\
        \ pair)\n3. Linked variant objects (list of data key-value pairs)\n4. Linked\
        \ expression objects (list of data key-value pairs)\n5. Linked flow cytometry\
        \ objects (list of data key-value pairs)\n\n## Metadata full-text queries\n\
        Single words can be supplied as is; otherwise, use speech marks (`\"`) to quote\
        \ queries that include whitespace. Speech marks and backslash characters in\
        \ the query need to be escaped with a backslash (`\\`).\n\n## Metadata filters\n\
        Metadata filters are key-value pairs joined by an operator. The `=` operator\
        \ matches literal values/string. The `!=` operator matches anything except\
        \ the literal value/string. The `<` or `>` operators match numerical results\
        \ that are less or greater than the supplied value. Strings containing whitespace\
        \ need to be quoted with (`\"`).\n\n## Data queries\nData queries must be\
        \ a list of key-value pairs, separated by whitespace. The set of valid keys\
        \ depends on the specific query type, and is documented in the query parameter\
        \ summary. The values can be simple non-whitespace strings, or strings enclosed\
        \ by speech marks (`\"`). Depending on the key, the value may be be a comma-delimited\
        \ list of string values. Others require numerical values. Ranges can be supplied\
        \ with `(0:1)` syntax, OR values with `|`.\n\n## Combinations\nMetadata queries/filters\
        \ for the same parameter can be combined with `&&`, `AND`, `||` and `OR` operators,\
        \ using white-space to separate out the terms and operators. Parentheses `(\
        \ )` can be used for complex expressions.\n\n## Versioning\nSpecific versions\
        \ of omics data files (eg. GCT) can be queried via the useVersions parameter.\
        \ Different versions of an omics data file are associated via their CHAIN_ID\
        \ metadata value. This CHAIN_ID can be supplied to the useVersions parameter\
        \ along with the version number or specific omics data file accessions to\
        \ include them in the query. If nothing is supplied to the useVersions parameter\
        \ then only the active version (which is usually the last one imported) is\
        \ queried. This acts as a filter before the rest of the query is carried out.\n\
        \nExample usage:\nuseVersions=* (query all versions, including those without\
        \ CHAIN_IDs)\nuseVersions=v2 (query the second version. If there is no second\
        \ version then the data file is not queried)\nuseVersions=v1,v0 (query the\
        \ first version and any data files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3\
        \ (for omics data files with a CHAIN_ID of GSCV002 query the third version)\n\
        useVersions=GSVC002:GSF00494,GSF000496 (for omics data files with a CHAIN_ID\
        \ of GSCV002 query only the specific accessions GSF00494 and GSF000496)\n\n\
        Rules for multiple CHAIN_IDs can be supplied to the parameter using the ;\
        \ separator.\n\n## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size together with a `cursor` tag. To retrieve the\
        \ next page of results please supply this `cursor` tag to resume the query\
        \ from your previous result and get the next page. If there are no more results\
        \ you will just retrieve an empty result.\n\n"
      operationId: "searchExpressionData"
      produces:
        - "application/json"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Allows to get an extended or updated response body. Available values:\n
        `term_id` - returns extended information including IDs for values and dictionaries;\n
        `multi_values` - returns data with several feature attributes and several sample
         measurements in the response body."
          required: false
          type: "array"
          items:
            type: "string"
          collectionFormat: "multi"
        - name: "studyFilter"
          in: "query"
          description: "Filter by study metadata (key-value metadata pair(s)). E.g.\
          \ `\"Study Source\"=ArrayExpress`\n"
          required: false
          type: "string"
        - name: "studyQuery"
          in: "query"
          description: "Search for objects via a full-text query over all study metadata\
          \ fields. E.g. `\"RNA-Seq of human dendritic cells\"`. Queries matching\
          \ dictionary terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "sampleFilter"
          in: "query"
          description: "Filter by sample metadata (key-value metadata pair(s)). E.g.\
          \ `\"Species or strain\"=\"Homo sapiens\"`\n"
          required: false
          type: "string"
        - name: "sampleQuery"
          in: "query"
          description: "Search for objects via a full-text query over all sample metadata\
          \ fields. E.g. `Clozapine`. Queries matching dictionary terms are automatically\
          \ expanded to include synonyms."
          required: false
          type: "string"
        - name: "libraryFilter"
          in: "query"
          description: "Filter by library metadata (key-value metadata pair(s)). E.g.\
          \ `\"Library Type\"=RNA-Seq-1`"
          required: false
          type: "string"
        - name: "libraryQuery"
          in: "query"
          description: "Search for library objects via a full-text query over all library\
          \ metadata fields. E.g. `\"illumina HiSeq500\"`. Queries matching dictionary\
          \ terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "preparationFilter"
          in: "query"
          description: "Filter by preparation metadata (key-value metadata pair(s)).\
          \ E.g. `Digestion=Trypsin`"
          required: false
          type: "string"
        - name: "preparationQuery"
          in: "query"
          description: "Search for preparation objects via a full-text query over all\
          \ preparation metadata fields. E.g. `\"reversed-phase liquid chromatography\"\
          `. Queries matching dictionary terms are automatically expanded to include\
          \ synonyms."
          required: false
          type: "string"
        - name: "searchSpecificTerms"
          in: "query"
          description: "If the full-text query term is present in an ODM dictionary,\
          \ enabling this parameter will modify the query to include child terms of\
          \ the full-text query.\n\nFor example, the search query \"Body fluid\" can\
          \ be expanded to include the term \"Blood\" (a child term of  \"Body fluid\"\
          ) so files containing either \"Body fluid\" or  \"Blood\"  in their metadata\
          \ will be returned in the search results.\n\nThe parent-child relationship\
          \ is defined by the key \"broaders\" or \"subClassOf\"  in the dictionary.\n\
          \nIf the full query term is not present in a dictionary then this parameter\
          \ has no effect."
          required: false
          type: "boolean"
        - name: "vxQuery"
          in: "query"
          description: "Search for objects linked to variant data via data query (key-value\
          \ pair(s)). E.g.  `VariationId=rs548419688|rs544419019`  `Intervals=12:23432-234324,30:234324-23432`\
          \ `Gene=ASPM,BRCA1`  `Reference=A|T Alteration=C|G` `Quality=(0.9:1.0)`\
          \  `Type=SNP|MNP|INS|DEL|MIXED`  `info_VT=DEL`  `info_EUR_AF=(0.9:1.0)`\
          \ `Start=12340` `AllelesNumber=1` `AlterationNumber=2`"
          required: false
          type: "string"
        - name: "vxFilter"
          in: "query"
          description: "Filter by variant metadata (key-value metadata pair(s)). E.g.\
          \ `\"Variant Source\"=dbSNP`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "exQuery"
          in: "query"
          description: "Search for objects linked to expression data and originally uploaded in GCT format via data \
          query (key-value pair(s)), e.g., `feature=ENSG00000230368,ENSG00000188976 MinValue=1.50`\n
          For the case when the original data is represented by multiple attributes per feature (e.g., multi_values) \
          scenarios, extended filtering syntax is as follows: \
          \n1. By feature attribute value for numeric and string attributes: `features.NAME=1007_s_at` or \
          `features.\"Average Mz\"=2.218`. As in the case of sample metadata queries, single words can be supplied \
          as is; otherwise, use speech marks (`\"`) to quote queries that include whitespace.
          \n2. It is possible to specify a set of possible values, separated by comma: `features.NAME=1007_s_at,121_at`.
          \n3. Use a combination of several conditions to search by more than one feature attribute at once: \
          `features.NAME=1007_s_at features.Description=\"probe set\"`.
          \n4. The first column for each original data file is identified as feature accession \
          (typically, it contains gene or protein names, accession IDs, etc.). Searching by such feature accession \
          would significantly outperform more complex queries by combining the other feature attributes. \
          To enable such a search, use `feature` without any attribute extension, e.g., \
          `feature=ENSG00000230368,ENSG00000188976`."
          required: false
          type: "string"
        - name: "exFilter"
          in: "query"
          description: "Filter by expression metadata (key-value metadata pair(s)).\
          \ E.g. `\"Genome Version\"=hg19-BROAD`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "fxQuery"
          in: "query"
          description: "Search for objects linked to flow cytometry data via data query\
          \ (key-value pair(s)). E.g. `ReadoutType=Median|Count` `CellPopulation=\"\
          CD45+, live\"` `MinValue=3.5`"
          required: false
          type: "string"
        - name: "fxFilter"
          in: "query"
          description: "Filter by flow cytometry metadata (key-value metadata pair(s)).\
          \ E.g. `Organ=blood`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "useVersions"
          in: "query"
          description: "Specify which versions of omics data files are used in the query.\
          \ By default the active version is used. See Versioning above. Syntax:\n\
          \n\\* or `v<version number>` or `<CHAIN_ID>`:`v<version number>` or `<CHAIN_ID>`:`<accession1,accession2,..>`"
          required: false
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
        - name: "cursor"
          in: "query"
          description: "The page tag to resume results from (see paging above)."
          required: false
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "How many results to retrieve per page. The default is 2000"
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "Omics query result."
          schema:
            $ref: "#/definitions/OmicsResponse"
        400:
          description: "Invalid data in request. See error message for details."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /omics/expression/group:
    get:
      tags:
        - "Omics queries"
      summary: "Retrieve group objects by searching across multiple data types"
      description: "Retrieve group objects whose linked data matches all supplied\
        \ conditions.\n\n## Conditions\nIt is possible to supply conditions for:\n\
        \n1. Samples (full-text or metadata key-value pair)\n2. Parent studies (full-text\
        \ or metadata key-value pair)\n3. Linked variant objects (list of data key-value\
        \ pairs)\n4. Linked expression objects (list of data key-value pairs)\n5.\
        \ Linked flow cytometry objects (list of data key-value pairs)\n\n## Metadata\
        \ full-text queries\nSingle words can be supplied as is; otherwise, use speech\
        \ marks (`\"`) to quote queries that include whitespace. Speech marks and\
        \ backslash characters in the query need to be escaped with a backslash (`\\\
        `).\n\n## Metadata filters\nMetadata filters are key-value pairs joined by\
        \ an operator. The `=` operator matches literal values/string. The `!=` operator\
        \ matches anything except the literal value/string. The `<` or `>` operators\
        \ match numerical results that are less or greater than the supplied value.\
        \ Strings containing whitespace need to be quoted with (`\"`).\n\n## Data\
        \ queries\nData queries must be a list of key-value pairs, separated by whitespace.\
        \ The set of valid keys depends on the specific query type, and is documented\
        \ in the query parameter summary. The values can be simple non-whitespace\
        \ strings, or strings enclosed by speech marks (`\"`). Depending on the key,\
        \ the value may be be a comma-delimited list of string values. Others require\
        \ numerical values. Ranges can be supplied with `(0:1)` syntax, OR values\
        \ with `|`.\n\n## Combinations\nMetadata queries/filters for the same parameter\
        \ can be combined with `&&`, `AND`, `||` and `OR` operators, using white-space\
        \ to separate out the terms and operators. Parentheses `( )` can be used for\
        \ complex expressions.\n\n## Versioning\nSpecific versions of omics data files\
        \ (eg. GCT) can be queried via the useVersions parameter. Different versions\
        \ of an omics data file are associated via their CHAIN_ID metadata value.\
        \ This CHAIN_ID can be supplied to the useVersions parameter along with the\
        \ version number or specific omics data file accessions to include them in\
        \ the query. If nothing is supplied to the useVersions parameter then only\
        \ the active version (which is usually the last one imported) is queried.\
        \ This acts as a filter before the rest of the query is carried out.\n\nExample\
        \ usage:\nuseVersions=* (query all versions, including those without CHAIN_IDs)\n\
        useVersions=v2 (query the second version. If there is no second version then\
        \ the data file is not queried)\nuseVersions=v1,v0 (query the first version\
        \ and any data files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3 (for\
        \ omics data files with a CHAIN_ID of GSCV002 query the third version)\nuseVersions=GSVC002:GSF00494,GSF000496\
        \ (for omics data files with a CHAIN_ID of GSCV002 query only the specific\
        \ accessions GSF00494 and GSF000496)\n\nRules for multiple CHAIN_IDs can be\
        \ supplied to the parameter using the ; separator.\n\n## Paging\nFor performance\
        \ reasons this endpoint returns results in \"pages\" of limited size together\
        \ with a `cursor` tag. To retrieve the next page of results please supply\
        \ this `cursor` tag to resume the query from your previous result and get\
        \ the next page. If there are no more results you will just retrieve an empty\
        \ result.\n\n"
      operationId: "searchExpressionGroups"
      produces:
        - "application/json"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "studyFilter"
          in: "query"
          description: "Filter by study metadata (key-value metadata pair(s)). E.g.\
          \ `\"Study Source\"=ArrayExpress`\n"
          required: false
          type: "string"
        - name: "studyQuery"
          in: "query"
          description: "Search for objects via a full-text query over all study metadata\
          \ fields. E.g. `\"RNA-Seq of human dendritic cells\"`. Queries matching\
          \ dictionary terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "sampleFilter"
          in: "query"
          description: "Filter by sample metadata (key-value metadata pair(s)). E.g.\
          \ `\"Species or strain\"=\"Homo sapiens\"`\n"
          required: false
          type: "string"
        - name: "sampleQuery"
          in: "query"
          description: "Search for objects via a full-text query over all sample metadata\
          \ fields. E.g. `Clozapine`. Queries matching dictionary terms are automatically\
          \ expanded to include synonyms."
          required: false
          type: "string"
        - name: "libraryFilter"
          in: "query"
          description: "Filter by library metadata (key-value metadata pair(s)). E.g.\
          \ `\"Library Type\"=RNA-Seq-1`"
          required: false
          type: "string"
        - name: "libraryQuery"
          in: "query"
          description: "Search for library objects via a full-text query over all library\
          \ metadata fields. E.g. `\"illumina HiSeq500\"`. Queries matching dictionary\
          \ terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "preparationFilter"
          in: "query"
          description: "Filter by preparation metadata (key-value metadata pair(s)).\
          \ E.g. `Digestion=Trypsin`"
          required: false
          type: "string"
        - name: "preparationQuery"
          in: "query"
          description: "Search for preparation objects via a full-text query over all\
          \ preparation metadata fields. E.g. `\"reversed-phase liquid chromatography\"\
          `. Queries matching dictionary terms are automatically expanded to include\
          \ synonyms."
          required: false
          type: "string"
        - name: "searchSpecificTerms"
          in: "query"
          description: "If the full-text query term is present in an ODM dictionary,\
          \ enabling this parameter will modify the query to include child terms of\
          \ the full-text query.\n\nFor example, the search query \"Body fluid\" can\
          \ be expanded to include the term \"Blood\" (a child term of  \"Body fluid\"\
          ) so files containing either \"Body fluid\" or  \"Blood\"  in their metadata\
          \ will be returned in the search results.\n\nThe parent-child relationship\
          \ is defined by the key \"broaders\" or \"subClassOf\"  in the dictionary.\n\
          \nIf the full query term is not present in a dictionary then this parameter\
          \ has no effect."
          required: false
          type: "boolean"
        - name: "vxQuery"
          in: "query"
          description: "Search for objects linked to variant data via data query (key-value\
          \ pair(s)). E.g.  `VariationId=rs548419688|rs544419019`  `Intervals=12:23432-234324,30:234324-23432`\
          \ `Gene=ASPM,BRCA1`  `Reference=A|T Alteration=C|G` `Quality=(0.9:1.0)`\
          \  `Type=SNP|MNP|INS|DEL|MIXED`  `info_VT=DEL`  `info_EUR_AF=(0.9:1.0)`\
          \ `Start=12340` `AllelesNumber=1` `AlterationNumber=2`"
          required: false
          type: "string"
        - name: "vxFilter"
          in: "query"
          description: "Filter by variant metadata (key-value metadata pair(s)). E.g.\
          \ `\"Variant Source\"=dbSNP`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "exQuery"
          in: "query"
          description: "Search for objects linked to expression data and originally uploaded in GCT format via data query\
          \ (key-value pair(s)), e.g.,`feature=ENSG00000230368,ENSG00000188976 MinValue=1.50`\n"
          required: false
          type: "string"
        - name: "exFilter"
          in: "query"
          description: "Filter by expression metadata (key-value metadata pair(s)).\
          \ E.g. `\"Genome Version\"=hg19-BROAD`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "fxQuery"
          in: "query"
          description: "Search for objects linked to flow cytometry data via data query\
          \ (key-value pair(s)). E.g. `ReadoutType=Median|Count` `CellPopulation=\"\
          CD45+, live\"` `MinValue=3.5`"
          required: false
          type: "string"
        - name: "fxFilter"
          in: "query"
          description: "Filter by flow cytometry metadata (key-value metadata pair(s)).\
          \ E.g. `Organ=blood`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "useVersions"
          in: "query"
          description: "Specify which versions of omics data files are used in the query.\
          \ By default the active version is used. See Versioning above. Syntax:\n\
          \n\\* or `v<version number>` or `<CHAIN_ID>`:`v<version number>` or `<CHAIN_ID>`:`<accession1,accession2,..>`"
          required: false
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
        - name: "cursor"
          in: "query"
          description: "The page tag to resume results from (see paging above)."
          required: false
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "How many results to retrieve per page. The default is 2000"
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "Omics query result."
          schema:
            $ref: "#/definitions/OmicsResponse"
        400:
          description: "Invalid data in request. See error message for details."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /omics/expression/streamed-data:
    get:
      tags:
        - "Omics queries"
      summary: "Stream expression data from a given GCT file"
      description: "Stream expression data from a given expression group object (GCT\
        \ file) that matches a sample/library/preparations query/filter. If no query/filters\
        \ are supplied all expression data is returned. Note it is not possible to\
        \ filter the expression data by value (e.g. min expression level) - all features\
        \ will be returned regardless of value. If a metadata filter is specified,\
        \ this endpoint will only return expression data that is associated with a\
        \ sample via the Sample Source ID attribute.\n## Conditions\nIt is possible\
        \ to supply conditions for:\n\n1. Samples (full-text or metadata key-value\
        \ pair)\n2. Libraries (full-text or metadata key-value pair)\n3. Preparations\
        \ (full-text or metadata key-value pair)\n## Metadata full-text queries\n\
        Single words can be supplied as is; otherwise, use speech marks (`\"`) to quote\
        \ queries that include whitespace. Speech marks and backslash characters in\
        \ the query need to be escaped with a backslash (`\\`).\n\n## Metadata filters\n\
        Metadata filters are key-value pairs joined by an operator. The `=` operator\
        \ matches literal values/string. The `!=` operator matches anything except\
        \ the literal value/string. The `<` or `>` operators match numerical results\
        \ that are less or greater than the supplied value. Strings containing whitespace\
        \ need to be quoted with (`\"`).\n\n## Combinations\nMetadata queries/filters\
        \ for the same parameter can be combined with `&&`, `AND`, `||` and `OR` operators,\
        \ using white-space to separate out the terms and operators. Parentheses `(\
        \ )` can be used for complex expressions.\n\n"
      operationId: "searchStreamedExpressionData"
      produces:
        - "text/csv"
      parameters:
        - name: "sampleFilter"
          in: "query"
          description: "Filter by sample metadata (key-value metadata pair(s)). E.g.\
          \ `\"Species or strain\"=\"Homo sapiens\"`\n"
          required: false
          type: "string"
        - name: "sampleQuery"
          in: "query"
          description: "Search for objects via a full-text query over all sample metadata\
          \ fields. E.g. `Clozapine`. Queries matching dictionary terms are automatically\
          \ expanded to include synonyms."
          required: false
          type: "string"
        - name: "libraryFilter"
          in: "query"
          description: "Filter by library metadata (key-value metadata pair(s)). E.g.\
          \ `\"Library Type\"=RNA-Seq-1`"
          required: false
          type: "string"
        - name: "libraryQuery"
          in: "query"
          description: "Search for library objects via a full-text query over all library\
          \ metadata fields. E.g. `\"illumina HiSeq500\"`. Queries matching dictionary\
          \ terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "preparationFilter"
          in: "query"
          description: "Filter by preparation metadata (key-value metadata pair(s)).\
          \ E.g. `Digestion=Trypsin`"
          required: false
          type: "string"
        - name: "preparationQuery"
          in: "query"
          description: "Search for preparation objects via a full-text query over all\
          \ preparation metadata fields. E.g. `\"reversed-phase liquid chromatography\"\
          `. Queries matching dictionary terms are automatically expanded to include\
          \ synonyms."
          required: false
          type: "string"
        - name: "searchSpecificTerms"
          in: "query"
          description: "If the full-text query term is present in an ODM dictionary,\
          \ enabling this parameter will modify the query to include child terms of\
          \ the full-text query.\n\nFor example, the search query \"Body fluid\" can\
          \ be expanded to include the term \"Blood\" (a child term of  \"Body fluid\"\
          ) so files containing either \"Body fluid\" or  \"Blood\"  in their metadata\
          \ will be returned in the search results.\n\nThe parent-child relationship\
          \ is defined by the key \"broaders\" or \"subClassOf\"  in the dictionary.\n\
          \nIf the full query term is not present in a dictionary then this parameter\
          \ has no effect."
          required: false
          type: "boolean"
        - name: "featureList"
          in: "query"
          description: "Filter results by specific feature (eg. Gene identifier). The\
          \ feature parameter value must match the name of the identifier in the GCT\
          \ file (under the NAME column). Example: `ENSG00000077044`"
          required: false
          type: "array"
          items:
            type: "string"
          collectionFormat: "multi"
        #      - name: "exQuery"
        #        in: "query"
        #        description: "Search for objects linked to expression data and originally uploaded in GCT format via data query\
        #          \ (key-value pair(s)), e.g.,`feature=ENSG00000230368,ENSG00000188976 MinValue=1.50`\n"
        #        required: false
        #        type: "string"
        - name: "groupAccession"
          in: "query"
          description: "Accession of the expression group object (GCT)"
          required: true
          type: "string"
        - name: "roundDigits"
          in: "query"
          description: "The number of digits after the decimal point for floating-point\
          \ values. The final value is rounded up. Must be non-negative. The default\
          \ is 4."
          required: false
          type: "integer"
          default: 4
          format: "int32"
      responses:
        200:
          description: "Stream of retrieved Expression data."
          schema:
            $ref: "#/definitions/StreamingOutput"
        400:
          description: "Invalid data in request. See error message for details."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /omics/flow-cytometry/data:
    get:
      tags:
        - "Omics queries"
      summary: "Retrieve flow cytometry data objects by searching across multiple\
        \ data types"
      description: "Retrieve flow cytometry data objects whose linked data matches\
        \ all supplied conditions.\n\nNote: A flow cytometry data query must be supplied.\n\
        \n## Conditions\nIt is possible to supply conditions for:\n\n1. Samples (full-text\
        \ or metadata key-value pair)\n2. Parent studies (full-text or metadata key-value\
        \ pair)\n3. Linked variant objects (list of data key-value pairs)\n4. Linked\
        \ expression objects (list of data key-value pairs)\n5. Linked flow cytometry\
        \ objects (list of data key-value pairs)\n\n## Metadata full-text queries\n\
        Single words can be supplied as is; otherwise, use speech marks (`\"`) to quote\
        \ queries that include whitespace. Speech marks and backslash characters in\
        \ the query need to be escaped with a backslash (`\\`).\n\n## Metadata filters\n\
        Metadata filters are key-value pairs joined by an operator. The `=` operator\
        \ matches literal values/string. The `!=` operator matches anything except\
        \ the literal value/string. The `<` or `>` operators match numerical results\
        \ that are less or greater than the supplied value. Strings containing whitespace\
        \ need to be quoted with (`\"`).\n\n## Data queries\nData queries must be\
        \ a list of key-value pairs, separated by whitespace. The set of valid keys\
        \ depends on the specific query type, and is documented in the query parameter\
        \ summary. The values can be simple non-whitespace strings, or strings enclosed\
        \ by speech marks (`\"`). Depending on the key, the value may be be a comma-delimited\
        \ list of string values. Others require numerical values. Ranges can be supplied\
        \ with `(0:1)` syntax, OR values with `|`.\n\n## Combinations\nMetadata queries/filters\
        \ for the same parameter can be combined with `&&`, `AND`, `||` and `OR` operators,\
        \ using white-space to separate out the terms and operators. Parentheses `(\
        \ )` can be used for complex expressions.\n\n## Versioning\nSpecific versions\
        \ of omics data files (eg. GCT) can be queried via the useVersions parameter.\
        \ Different versions of an omics data file are associated via their CHAIN_ID\
        \ metadata value. This CHAIN_ID can be supplied to the useVersions parameter\
        \ along with the version number or specific omics data file accessions to\
        \ include them in the query. If nothing is supplied to the useVersions parameter\
        \ then only the active version (which is usually the last one imported) is\
        \ queried. This acts as a filter before the rest of the query is carried out.\n\
        \nExample usage:\nuseVersions=* (query all versions, including those without\
        \ CHAIN_IDs)\nuseVersions=v2 (query the second version. If there is no second\
        \ version then the data file is not queried)\nuseVersions=v1,v0 (query the\
        \ first version and any data files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3\
        \ (for omics data files with a CHAIN_ID of GSCV002 query the third version)\n\
        useVersions=GSVC002:GSF00494,GSF000496 (for omics data files with a CHAIN_ID\
        \ of GSCV002 query only the specific accessions GSF00494 and GSF000496)\n\n\
        Rules for multiple CHAIN_IDs can be supplied to the parameter using the ;\
        \ separator.\n\n## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size together with a `cursor` tag. To retrieve the\
        \ next page of results please supply this `cursor` tag to resume the query\
        \ from your previous result and get the next page. If there are no more results\
        \ you will just retrieve an empty result.\n\n"
      operationId: "searchFlowCytometryData"
      produces:
        - "application/json"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "studyFilter"
          in: "query"
          description: "Filter by study metadata (key-value metadata pair(s)). E.g.\
          \ `\"Study Source\"=ArrayExpress`\n"
          required: false
          type: "string"
        - name: "studyQuery"
          in: "query"
          description: "Search for objects via a full-text query over all study metadata\
          \ fields. E.g. `\"RNA-Seq of human dendritic cells\"`. Queries matching\
          \ dictionary terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "sampleFilter"
          in: "query"
          description: "Filter by sample metadata (key-value metadata pair(s)). E.g.\
          \ `\"Species or strain\"=\"Homo sapiens\"`\n"
          required: false
          type: "string"
        - name: "sampleQuery"
          in: "query"
          description: "Search for objects via a full-text query over all sample metadata\
          \ fields. E.g. `Clozapine`. Queries matching dictionary terms are automatically\
          \ expanded to include synonyms."
          required: false
          type: "string"
        - name: "libraryFilter"
          in: "query"
          description: "Filter by library metadata (key-value metadata pair(s)). E.g.\
          \ `\"Library Type\"=RNA-Seq-1`"
          required: false
          type: "string"
        - name: "libraryQuery"
          in: "query"
          description: "Search for library objects via a full-text query over all library\
          \ metadata fields. E.g. `\"illumina HiSeq500\"`. Queries matching dictionary\
          \ terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "preparationFilter"
          in: "query"
          description: "Filter by preparation metadata (key-value metadata pair(s)).\
          \ E.g. `Digestion=Trypsin`"
          required: false
          type: "string"
        - name: "preparationQuery"
          in: "query"
          description: "Search for preparation objects via a full-text query over all\
          \ preparation metadata fields. E.g. `\"reversed-phase liquid chromatography\"\
          `. Queries matching dictionary terms are automatically expanded to include\
          \ synonyms."
          required: false
          type: "string"
        - name: "searchSpecificTerms"
          in: "query"
          description: "If the full-text query term is present in an ODM dictionary,\
          \ enabling this parameter will modify the query to include child terms of\
          \ the full-text query.\n\nFor example, the search query \"Body fluid\" can\
          \ be expanded to include the term \"Blood\" (a child term of  \"Body fluid\"\
          ) so files containing either \"Body fluid\" or  \"Blood\"  in their metadata\
          \ will be returned in the search results.\n\nThe parent-child relationship\
          \ is defined by the key \"broaders\" or \"subClassOf\"  in the dictionary.\n\
          \nIf the full query term is not present in a dictionary then this parameter\
          \ has no effect."
          required: false
          type: "boolean"
        - name: "vxQuery"
          in: "query"
          description: "Search for objects linked to variant data via data query (key-value\
          \ pair(s)). E.g.  `VariationId=rs548419688|rs544419019`  `Intervals=12:23432-234324,30:234324-23432`\
          \ `Gene=ASPM,BRCA1`  `Reference=A|T Alteration=C|G` `Quality=(0.9:1.0)`\
          \  `Type=SNP|MNP|INS|DEL|MIXED`  `info_VT=DEL`  `info_EUR_AF=(0.9:1.0)`\
          \ `Start=12340` `AllelesNumber=1` `AlterationNumber=2`"
          required: false
          type: "string"
        - name: "vxFilter"
          in: "query"
          description: "Filter by variant metadata (key-value metadata pair(s)). E.g.\
          \ `\"Variant Source\"=dbSNP`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "exQuery"
          in: "query"
          description: "Search for objects linked to expression data and originally uploaded in GCT format via data query\
          \ (key-value pair(s)), e.g.,`feature=ENSG00000230368,ENSG00000188976 MinValue=1.50`\n"
          required: false
          type: "string"
        - name: "exFilter"
          in: "query"
          description: "Filter by expression metadata (key-value metadata pair(s)).\
          \ E.g. `\"Genome Version\"=hg19-BROAD`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "fxQuery"
          in: "query"
          description: "Search for objects linked to flow cytometry data via data query\
          \ (key-value pair(s)). E.g. `ReadoutType=Median|Count` `CellPopulation=\"\
          CD45+, live\"` `MinValue=3.5`"
          required: false
          type: "string"
        - name: "fxFilter"
          in: "query"
          description: "Filter by flow cytometry metadata (key-value metadata pair(s)).\
          \ E.g. `Organ=blood`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "useVersions"
          in: "query"
          description: "Specify which versions of omics data files are used in the query.\
          \ By default the active version is used. See Versioning above. Syntax:\n\
          \n\\* or `v<version number>` or `<CHAIN_ID>`:`v<version number>` or `<CHAIN_ID>`:`<accession1,accession2,..>`"
          required: false
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
        - name: "cursor"
          in: "query"
          description: "The page tag to resume results from (see paging above)."
          required: false
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "How many results to retrieve per page. The default is 2000"
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "Omics query result."
          schema:
            $ref: "#/definitions/OmicsResponse"
        400:
          description: "Invalid data in request. See error message for details."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /omics/flow-cytometry/group:
    get:
      tags:
        - "Omics queries"
      summary: "Retrieve group objects by searching across multiple data types"
      description: "Retrieve group objects whose linked data matches all supplied\
        \ conditions.\n\n## Conditions\nIt is possible to supply conditions for:\n\
        \n1. Samples (full-text or metadata key-value pair)\n2. Parent studies (full-text\
        \ or metadata key-value pair)\n3. Linked variant objects (list of data key-value\
        \ pairs)\n4. Linked expression objects (list of data key-value pairs)\n5.\
        \ Linked flow cytometry objects (list of data key-value pairs)\n\n## Metadata\
        \ full-text queries\nSingle words can be supplied as is; otherwise, use speech\
        \ marks (`\"`) to quote queries that include whitespace. Speech marks and\
        \ backslash characters in the query need to be escaped with a backslash (`\\\
        `).\n\n## Metadata filters\nMetadata filters are key-value pairs joined by\
        \ an operator. The `=` operator matches literal values/string. The `!=` operator\
        \ matches anything except the literal value/string. The `<` or `>` operators\
        \ match numerical results that are less or greater than the supplied value.\
        \ Strings containing whitespace need to be quoted with (`\"`).\n\n## Data\
        \ queries\nData queries must be a list of key-value pairs, separated by whitespace.\
        \ The set of valid keys depends on the specific query type, and is documented\
        \ in the query parameter summary. The values can be simple non-whitespace\
        \ strings, or strings enclosed by speech marks (`\"`). Depending on the key,\
        \ the value may be be a comma-delimited list of string values. Others require\
        \ numerical values. Ranges can be supplied with `(0:1)` syntax, OR values\
        \ with `|`.\n\n## Combinations\nMetadata queries/filters for the same parameter\
        \ can be combined with `&&`, `AND`, `||` and `OR` operators, using white-space\
        \ to separate out the terms and operators. Parentheses `( )` can be used for\
        \ complex expressions.\n\n## Versioning\nSpecific versions of omics data files\
        \ (eg. GCT) can be queried via the useVersions parameter. Different versions\
        \ of an omics data file are associated via their CHAIN_ID metadata value.\
        \ This CHAIN_ID can be supplied to the useVersions parameter along with the\
        \ version number or specific omics data file accessions to include them in\
        \ the query. If nothing is supplied to the useVersions parameter then only\
        \ the active version (which is usually the last one imported) is queried.\
        \ This acts as a filter before the rest of the query is carried out.\n\nExample\
        \ usage:\nuseVersions=* (query all versions, including those without CHAIN_IDs)\n\
        useVersions=v2 (query the second version. If there is no second version then\
        \ the data file is not queried)\nuseVersions=v1,v0 (query the first version\
        \ and any data files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3 (for\
        \ omics data files with a CHAIN_ID of GSCV002 query the third version)\nuseVersions=GSVC002:GSF00494,GSF000496\
        \ (for omics data files with a CHAIN_ID of GSCV002 query only the specific\
        \ accessions GSF00494 and GSF000496)\n\nRules for multiple CHAIN_IDs can be\
        \ supplied to the parameter using the ; separator.\n\n## Paging\nFor performance\
        \ reasons this endpoint returns results in \"pages\" of limited size together\
        \ with a `cursor` tag. To retrieve the next page of results please supply\
        \ this `cursor` tag to resume the query from your previous result and get\
        \ the next page. If there are no more results you will just retrieve an empty\
        \ result.\n\n"
      operationId: "searchFlowCytometryGroups"
      produces:
        - "application/json"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "studyFilter"
          in: "query"
          description: "Filter by study metadata (key-value metadata pair(s)). E.g.\
          \ `\"Study Source\"=ArrayExpress`\n"
          required: false
          type: "string"
        - name: "studyQuery"
          in: "query"
          description: "Search for objects via a full-text query over all study metadata\
          \ fields. E.g. `\"RNA-Seq of human dendritic cells\"`. Queries matching\
          \ dictionary terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "sampleFilter"
          in: "query"
          description: "Filter by sample metadata (key-value metadata pair(s)). E.g.\
          \ `\"Species or strain\"=\"Homo sapiens\"`\n"
          required: false
          type: "string"
        - name: "sampleQuery"
          in: "query"
          description: "Search for objects via a full-text query over all sample metadata\
          \ fields. E.g. `Clozapine`. Queries matching dictionary terms are automatically\
          \ expanded to include synonyms."
          required: false
          type: "string"
        - name: "libraryFilter"
          in: "query"
          description: "Filter by library metadata (key-value metadata pair(s)). E.g.\
          \ `\"Library Type\"=RNA-Seq-1`"
          required: false
          type: "string"
        - name: "libraryQuery"
          in: "query"
          description: "Search for library objects via a full-text query over all library\
          \ metadata fields. E.g. `\"illumina HiSeq500\"`. Queries matching dictionary\
          \ terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "preparationFilter"
          in: "query"
          description: "Filter by preparation metadata (key-value metadata pair(s)).\
          \ E.g. `Digestion=Trypsin`"
          required: false
          type: "string"
        - name: "preparationQuery"
          in: "query"
          description: "Search for preparation objects via a full-text query over all\
          \ preparation metadata fields. E.g. `\"reversed-phase liquid chromatography\"\
          `. Queries matching dictionary terms are automatically expanded to include\
          \ synonyms."
          required: false
          type: "string"
        - name: "searchSpecificTerms"
          in: "query"
          description: "If the full-text query term is present in an ODM dictionary,\
          \ enabling this parameter will modify the query to include child terms of\
          \ the full-text query.\n\nFor example, the search query \"Body fluid\" can\
          \ be expanded to include the term \"Blood\" (a child term of  \"Body fluid\"\
          ) so files containing either \"Body fluid\" or  \"Blood\"  in their metadata\
          \ will be returned in the search results.\n\nThe parent-child relationship\
          \ is defined by the key \"broaders\" or \"subClassOf\"  in the dictionary.\n\
          \nIf the full query term is not present in a dictionary then this parameter\
          \ has no effect."
          required: false
          type: "boolean"
        - name: "vxQuery"
          in: "query"
          description: "Search for objects linked to variant data via data query (key-value\
          \ pair(s)). E.g.  `VariationId=rs548419688|rs544419019`  `Intervals=12:23432-234324,30:234324-23432`\
          \ `Gene=ASPM,BRCA1`  `Reference=A|T Alteration=C|G` `Quality=(0.9:1.0)`\
          \  `Type=SNP|MNP|INS|DEL|MIXED`  `info_VT=DEL`  `info_EUR_AF=(0.9:1.0)`\
          \ `Start=12340` `AllelesNumber=1` `AlterationNumber=2`"
          required: false
          type: "string"
        - name: "vxFilter"
          in: "query"
          description: "Filter by variant metadata (key-value metadata pair(s)). E.g.\
          \ `\"Variant Source\"=dbSNP`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "exQuery"
          in: "query"
          description: "Search for objects linked to expression data and originally uploaded in GCT format via data query\
          \ (key-value pair(s)), e.g.,`feature=ENSG00000230368,ENSG00000188976 MinValue=1.50`\n"
          required: false
          type: "string"
        - name: "exFilter"
          in: "query"
          description: "Filter by expression metadata (key-value metadata pair(s)).\
          \ E.g. `\"Genome Version\"=hg19-BROAD`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "fxQuery"
          in: "query"
          description: "Search for objects linked to flow cytometry data via data query\
          \ (key-value pair(s)). E.g. `ReadoutType=Median|Count` `CellPopulation=\"\
          CD45+, live\"` `MinValue=3.5`"
          required: false
          type: "string"
        - name: "fxFilter"
          in: "query"
          description: "Filter by flow cytometry metadata (key-value metadata pair(s)).\
          \ E.g. `Organ=blood`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "useVersions"
          in: "query"
          description: "Specify which versions of omics data files are used in the query.\
          \ By default the active version is used. See Versioning above. Syntax:\n\
          \n\\* or `v<version number>` or `<CHAIN_ID>`:`v<version number>` or `<CHAIN_ID>`:`<accession1,accession2,..>`"
          required: false
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
        - name: "cursor"
          in: "query"
          description: "The page tag to resume results from (see paging above)."
          required: false
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "How many results to retrieve per page. The default is 2000"
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "Omics query result."
          schema:
            $ref: "#/definitions/OmicsResponse"
        400:
          description: "Invalid data in request. See error message for details."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /omics/samples:
    get:
      tags:
        - "Omics queries"
      summary: "Retrieve sample metadata objects by searching across multiple data\
        \ types"
      description: "Retrieve sample metadata objects whose linked data matches all\
        \ supplied conditions.\n\n## Conditions\nIt is possible to supply conditions\
        \ for:\n\n1. Samples (full-text or metadata key-value pair)\n2. Parent studies\
        \ (full-text or metadata key-value pair)\n3. Linked variant objects (list\
        \ of data key-value pairs)\n4. Linked expression objects (list of data key-value\
        \ pairs)\n5. Linked flow cytometry objects (list of data key-value pairs)\n\
        \n## Metadata full-text queries\nSingle words can be supplied as is; otherwise,\
        \ use speech marks (`\"`) to quote queries that include whitespace. Speech\
        \ marks and backslash characters in the query need to be escaped with a backslash\
        \ (`\\`).\n\n## Metadata filters\nMetadata filters are key-value pairs joined\
        \ by an operator. The `=` operator matches literal values/string. The `!=`\
        \ operator matches anything except the literal value/string. The `<` or `>`\
        \ operators match numerical results that are less or greater than the supplied\
        \ value. Strings containing whitespace need to be quoted with (`\"`).\n\n\
        ## Data queries\nData queries must be a list of key-value pairs, separated\
        \ by whitespace. The set of valid keys depends on the specific query type,\
        \ and is documented in the query parameter summary. The values can be simple\
        \ non-whitespace strings, or strings enclosed by speech marks (`\"`). Depending\
        \ on the key, the value may be be a comma-delimited list of string values.\
        \ Others require numerical values. Ranges can be supplied with `(0:1)` syntax,\
        \ OR values with `|`.\n\n## Combinations\nMetadata queries/filters for the\
        \ same parameter can be combined with `&&`, `AND`, `||` and `OR` operators,\
        \ using white-space to separate out the terms and operators. Parentheses `(\
        \ )` can be used for complex expressions.\n\n## Versioning\nSpecific versions\
        \ of omics data files (eg. GCT) can be queried via the useVersions parameter.\
        \ Different versions of an omics data file are associated via their CHAIN_ID\
        \ metadata value. This CHAIN_ID can be supplied to the useVersions parameter\
        \ along with the version number or specific omics data file accessions to\
        \ include them in the query. If nothing is supplied to the useVersions parameter\
        \ then only the active version (which is usually the last one imported) is\
        \ queried. This acts as a filter before the rest of the query is carried out.\n\
        \nExample usage:\nuseVersions=* (query all versions, including those without\
        \ CHAIN_IDs)\nuseVersions=v2 (query the second version. If there is no second\
        \ version then the data file is not queried)\nuseVersions=v1,v0 (query the\
        \ first version and any data files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3\
        \ (for omics data files with a CHAIN_ID of GSCV002 query the third version)\n\
        useVersions=GSVC002:GSF00494,GSF000496 (for omics data files with a CHAIN_ID\
        \ of GSCV002 query only the specific accessions GSF00494 and GSF000496)\n\n\
        Rules for multiple CHAIN_IDs can be supplied to the parameter using the ;\
        \ separator.\n\n## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size together with a `cursor` tag. To retrieve the\
        \ next page of results please supply this `cursor` tag to resume the query\
        \ from your previous result and get the next page. If there are no more results\
        \ you will just retrieve an empty result.\n\n"
      operationId: "searchSamples"
      produces:
        - "application/json"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "studyFilter"
          in: "query"
          description: "Filter by study metadata (key-value metadata pair(s)). E.g.\
          \ `\"Study Source\"=ArrayExpress`\n"
          required: false
          type: "string"
        - name: "studyQuery"
          in: "query"
          description: "Search for objects via a full-text query over all study metadata\
          \ fields. E.g. `\"RNA-Seq of human dendritic cells\"`. Queries matching\
          \ dictionary terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "sampleFilter"
          in: "query"
          description: "Filter by sample metadata (key-value metadata pair(s)). E.g.\
          \ `\"Species or strain\"=\"Homo sapiens\"`\n"
          required: false
          type: "string"
        - name: "sampleQuery"
          in: "query"
          description: "Search for objects via a full-text query over all sample metadata\
          \ fields. E.g. `Clozapine`. Queries matching dictionary terms are automatically\
          \ expanded to include synonyms."
          required: false
          type: "string"
        - name: "libraryFilter"
          in: "query"
          description: "Filter by library metadata (key-value metadata pair(s)). E.g.\
          \ `\"Library Type\"=RNA-Seq-1`"
          required: false
          type: "string"
        - name: "libraryQuery"
          in: "query"
          description: "Search for library objects via a full-text query over all library\
          \ metadata fields. E.g. `\"illumina HiSeq500\"`. Queries matching dictionary\
          \ terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "preparationFilter"
          in: "query"
          description: "Filter by preparation metadata (key-value metadata pair(s)).\
          \ E.g. `Digestion=Trypsin`"
          required: false
          type: "string"
        - name: "preparationQuery"
          in: "query"
          description: "Search for preparation objects via a full-text query over all\
          \ preparation metadata fields. E.g. `\"reversed-phase liquid chromatography\"\
          `. Queries matching dictionary terms are automatically expanded to include\
          \ synonyms."
          required: false
          type: "string"
        - name: "searchSpecificTerms"
          in: "query"
          description: "If the full-text query term is present in an ODM dictionary,\
          \ enabling this parameter will modify the query to include child terms of\
          \ the full-text query.\n\nFor example, the search query \"Body fluid\" can\
          \ be expanded to include the term \"Blood\" (a child term of  \"Body fluid\"\
          ) so files containing either \"Body fluid\" or  \"Blood\"  in their metadata\
          \ will be returned in the search results.\n\nThe parent-child relationship\
          \ is defined by the key \"broaders\" or \"subClassOf\"  in the dictionary.\n\
          \nIf the full query term is not present in a dictionary then this parameter\
          \ has no effect."
          required: false
          type: "boolean"
        - name: "vxQuery"
          in: "query"
          description: "Search for objects linked to variant data via data query (key-value\
          \ pair(s)). E.g.  `VariationId=rs548419688|rs544419019`  `Intervals=12:23432-234324,30:234324-23432`\
          \ `Gene=ASPM,BRCA1`  `Reference=A|T Alteration=C|G` `Quality=(0.9:1.0)`\
          \  `Type=SNP|MNP|INS|DEL|MIXED`  `info_VT=DEL`  `info_EUR_AF=(0.9:1.0)`\
          \ `Start=12340` `AllelesNumber=1` `AlterationNumber=2`"
          required: false
          type: "string"
        - name: "vxFilter"
          in: "query"
          description: "Filter by variant metadata (key-value metadata pair(s)). E.g.\
          \ `\"Variant Source\"=dbSNP`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "exQuery"
          in: "query"
          description: "Search for objects linked to expression data and originally uploaded in GCT format via data query\
          \ (key-value pair(s)), e.g.,`feature=ENSG00000230368,ENSG00000188976 MinValue=1.50`\n"
          required: false
          type: "string"
        - name: "exFilter"
          in: "query"
          description: "Filter by expression metadata (key-value metadata pair(s)).\
          \ E.g. `\"Genome Version\"=hg19-BROAD`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "fxQuery"
          in: "query"
          description: "Search for objects linked to flow cytometry data via data query\
          \ (key-value pair(s)). E.g. `ReadoutType=Median|Count` `CellPopulation=\"\
          CD45+, live\"` `MinValue=3.5`"
          required: false
          type: "string"
        - name: "fxFilter"
          in: "query"
          description: "Filter by flow cytometry metadata (key-value metadata pair(s)).\
          \ E.g. `Organ=blood`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "useVersions"
          in: "query"
          description: "Specify which versions of omics data files are used in the query.\
          \ By default the active version is used. See Versioning above. Syntax:\n\
          \n\\* or `v<version number>` or `<CHAIN_ID>`:`v<version number>` or `<CHAIN_ID>`:`<accession1,accession2,..>`"
          required: false
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
        - name: "cursor"
          in: "query"
          description: "The page tag to resume results from (see paging above)."
          required: false
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "How many results to retrieve per page. The default is 2000"
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "Omics query result."
          schema:
            $ref: "#/definitions/OmicsResponse"
        400:
          description: "Invalid data in request. See error message for details."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /omics/variant/data:
    get:
      tags:
        - "Omics queries"
      summary: "Retrieve variant data objects by searching across multiple data types"
      description: "Retrieve variant data objects whose linked data matches all supplied\
        \ conditions.\n\nNote: A variant data query must be supplied.\n\n## Conditions\n\
        It is possible to supply conditions for:\n\n1. Samples (full-text or metadata\
        \ key-value pair)\n2. Parent studies (full-text or metadata key-value pair)\n\
        3. Linked variant objects (list of data key-value pairs)\n4. Linked expression\
        \ objects (list of data key-value pairs)\n5. Linked flow cytometry objects\
        \ (list of data key-value pairs)\n\n## Metadata full-text queries\nSingle\
        \ words can be supplied as is; otherwise, use speech marks (`\"`) to quote\
        \ queries that include whitespace. Speech marks and backslash characters in\
        \ the query need to be escaped with a backslash (`\\`).\n\n## Metadata filters\n\
        Metadata filters are key-value pairs joined by an operator. The `=` operator\
        \ matches literal values/string. The `!=` operator matches anything except\
        \ the literal value/string. The `<` or `>` operators match numerical results\
        \ that are less or greater than the supplied value. Strings containing whitespace\
        \ need to be quoted with (`\"`).\n\n## Data queries\nData queries must be\
        \ a list of key-value pairs, separated by whitespace. The set of valid keys\
        \ depends on the specific query type, and is documented in the query parameter\
        \ summary. The values can be simple non-whitespace strings, or strings enclosed\
        \ by speech marks (`\"`). Depending on the key, the value may be be a comma-delimited\
        \ list of string values. Others require numerical values. Ranges can be supplied\
        \ with `(0:1)` syntax, OR values with `|`.\n\n## Combinations\nMetadata queries/filters\
        \ for the same parameter can be combined with `&&`, `AND`, `||` and `OR` operators,\
        \ using white-space to separate out the terms and operators. Parentheses `(\
        \ )` can be used for complex expressions.\n\n## Versioning\nSpecific versions\
        \ of omics data files (eg. GCT) can be queried via the useVersions parameter.\
        \ Different versions of an omics data file are associated via their CHAIN_ID\
        \ metadata value. This CHAIN_ID can be supplied to the useVersions parameter\
        \ along with the version number or specific omics data file accessions to\
        \ include them in the query. If nothing is supplied to the useVersions parameter\
        \ then only the active version (which is usually the last one imported) is\
        \ queried. This acts as a filter before the rest of the query is carried out.\n\
        \nExample usage:\nuseVersions=* (query all versions, including those without\
        \ CHAIN_IDs)\nuseVersions=v2 (query the second version. If there is no second\
        \ version then the data file is not queried)\nuseVersions=v1,v0 (query the\
        \ first version and any data files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3\
        \ (for omics data files with a CHAIN_ID of GSCV002 query the third version)\n\
        useVersions=GSVC002:GSF00494,GSF000496 (for omics data files with a CHAIN_ID\
        \ of GSCV002 query only the specific accessions GSF00494 and GSF000496)\n\n\
        Rules for multiple CHAIN_IDs can be supplied to the parameter using the ;\
        \ separator.\n\n## Paging\nFor performance reasons this endpoint returns results\
        \ in \"pages\" of limited size together with a `cursor` tag. To retrieve the\
        \ next page of results please supply this `cursor` tag to resume the query\
        \ from your previous result and get the next page. If there are no more results\
        \ you will just retrieve an empty result.\n\n"
      operationId: "searchVariantData"
      produces:
        - "application/json"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "studyFilter"
          in: "query"
          description: "Filter by study metadata (key-value metadata pair(s)). E.g.\
          \ `\"Study Source\"=ArrayExpress`\n"
          required: false
          type: "string"
        - name: "studyQuery"
          in: "query"
          description: "Search for objects via a full-text query over all study metadata\
          \ fields. E.g. `\"RNA-Seq of human dendritic cells\"`. Queries matching\
          \ dictionary terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "sampleFilter"
          in: "query"
          description: "Filter by sample metadata (key-value metadata pair(s)). E.g.\
          \ `\"Species or strain\"=\"Homo sapiens\"`\n"
          required: false
          type: "string"
        - name: "sampleQuery"
          in: "query"
          description: "Search for objects via a full-text query over all sample metadata\
          \ fields. E.g. `Clozapine`. Queries matching dictionary terms are automatically\
          \ expanded to include synonyms."
          required: false
          type: "string"
        - name: "libraryFilter"
          in: "query"
          description: "Filter by library metadata (key-value metadata pair(s)). E.g.\
          \ `\"Library Type\"=RNA-Seq-1`"
          required: false
          type: "string"
        - name: "libraryQuery"
          in: "query"
          description: "Search for library objects via a full-text query over all library\
          \ metadata fields. E.g. `\"illumina HiSeq500\"`. Queries matching dictionary\
          \ terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "preparationFilter"
          in: "query"
          description: "Filter by preparation metadata (key-value metadata pair(s)).\
          \ E.g. `Digestion=Trypsin`"
          required: false
          type: "string"
        - name: "preparationQuery"
          in: "query"
          description: "Search for preparation objects via a full-text query over all\
          \ preparation metadata fields. E.g. `\"reversed-phase liquid chromatography\"\
          `. Queries matching dictionary terms are automatically expanded to include\
          \ synonyms."
          required: false
          type: "string"
        - name: "searchSpecificTerms"
          in: "query"
          description: "If the full-text query term is present in an ODM dictionary,\
          \ enabling this parameter will modify the query to include child terms of\
          \ the full-text query.\n\nFor example, the search query \"Body fluid\" can\
          \ be expanded to include the term \"Blood\" (a child term of  \"Body fluid\"\
          ) so files containing either \"Body fluid\" or  \"Blood\"  in their metadata\
          \ will be returned in the search results.\n\nThe parent-child relationship\
          \ is defined by the key \"broaders\" or \"subClassOf\"  in the dictionary.\n\
          \nIf the full query term is not present in a dictionary then this parameter\
          \ has no effect."
          required: false
          type: "boolean"
        - name: "vxQuery"
          in: "query"
          description: "Search for objects linked to variant data via data query (key-value\
          \ pair(s)). E.g.  `VariationId=rs548419688|rs544419019`  `Intervals=12:23432-234324,30:234324-23432`\
          \ `Gene=ASPM,BRCA1`  `Reference=A|T Alteration=C|G` `Quality=(0.9:1.0)`\
          \  `Type=SNP|MNP|INS|DEL|MIXED`  `info_VT=DEL`  `info_EUR_AF=(0.9:1.0)`\
          \ `Start=12340` `AllelesNumber=1` `AlterationNumber=2`"
          required: false
          type: "string"
        - name: "vxFilter"
          in: "query"
          description: "Filter by variant metadata (key-value metadata pair(s)). E.g.\
          \ `\"Variant Source\"=dbSNP`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "exQuery"
          in: "query"
          description: "Search for objects linked to expression data and originally uploaded in GCT format via data query\
          \ (key-value pair(s)), e.g.,`feature=ENSG00000230368,ENSG00000188976 MinValue=1.50`\n"
          required: false
          type: "string"
        - name: "exFilter"
          in: "query"
          description: "Filter by expression metadata (key-value metadata pair(s)).\
          \ E.g. `\"Genome Version\"=hg19-BROAD`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "fxQuery"
          in: "query"
          description: "Search for objects linked to flow cytometry data via data query\
          \ (key-value pair(s)). E.g. `ReadoutType=Median|Count` `CellPopulation=\"\
          CD45+, live\"` `MinValue=3.5`"
          required: false
          type: "string"
        - name: "fxFilter"
          in: "query"
          description: "Filter by flow cytometry metadata (key-value metadata pair(s)).\
          \ E.g. `Organ=blood`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "useVersions"
          in: "query"
          description: "Specify which versions of omics data files are used in the query.\
          \ By default the active version is used. See Versioning above. Syntax:\n\
          \n\\* or `v<version number>` or `<CHAIN_ID>`:`v<version number>` or `<CHAIN_ID>`:`<accession1,accession2,..>`"
          required: false
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
        - name: "cursor"
          in: "query"
          description: "The page tag to resume results from (see paging above)."
          required: false
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "How many results to retrieve per page. The default is 2000"
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "Omics query result."
          schema:
            $ref: "#/definitions/OmicsResponse"
        400:
          description: "Invalid data in request. See error message for details."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
  /omics/variant/group:
    get:
      tags:
        - "Omics queries"
      summary: "Retrieve group objects by searching across multiple data types"
      description: "Retrieve group objects whose linked data matches all supplied\
        \ conditions.\n\n## Conditions\nIt is possible to supply conditions for:\n\
        \n1. Samples (full-text or metadata key-value pair)\n2. Parent studies (full-text\
        \ or metadata key-value pair)\n3. Linked variant objects (list of data key-value\
        \ pairs)\n4. Linked expression objects (list of data key-value pairs)\n5.\
        \ Linked flow cytometry objects (list of data key-value pairs)\n\n## Metadata\
        \ full-text queries\nSingle words can be supplied as is; otherwise, use speech\
        \ marks (`\"`) to quote queries that include whitespace. Speech marks and\
        \ backslash characters in the query need to be escaped with a backslash (`\\\
        `).\n\n## Metadata filters\nMetadata filters are key-value pairs joined by\
        \ an operator. The `=` operator matches literal values/string. The `!=` operator\
        \ matches anything except the literal value/string. The `<` or `>` operators\
        \ match numerical results that are less or greater than the supplied value.\
        \ Strings containing whitespace need to be quoted with (`\"`).\n\n## Data\
        \ queries\nData queries must be a list of key-value pairs, separated by whitespace.\
        \ The set of valid keys depends on the specific query type, and is documented\
        \ in the query parameter summary. The values can be simple non-whitespace\
        \ strings, or strings enclosed by speech marks (`\"`). Depending on the key,\
        \ the value may be be a comma-delimited list of string values. Others require\
        \ numerical values. Ranges can be supplied with `(0:1)` syntax, OR values\
        \ with `|`.\n\n## Combinations\nMetadata queries/filters for the same parameter\
        \ can be combined with `&&`, `AND`, `||` and `OR` operators, using white-space\
        \ to separate out the terms and operators. Parentheses `( )` can be used for\
        \ complex expressions.\n\n## Versioning\nSpecific versions of omics data files\
        \ (eg. GCT) can be queried via the useVersions parameter. Different versions\
        \ of an omics data file are associated via their CHAIN_ID metadata value.\
        \ This CHAIN_ID can be supplied to the useVersions parameter along with the\
        \ version number or specific omics data file accessions to include them in\
        \ the query. If nothing is supplied to the useVersions parameter then only\
        \ the active version (which is usually the last one imported) is queried.\
        \ This acts as a filter before the rest of the query is carried out.\n\nExample\
        \ usage:\nuseVersions=* (query all versions, including those without CHAIN_IDs)\n\
        useVersions=v2 (query the second version. If there is no second version then\
        \ the data file is not queried)\nuseVersions=v1,v0 (query the first version\
        \ and any data files without CHAIN_IDs(v0) )\nuseVersions=GSVC002:v3 (for\
        \ omics data files with a CHAIN_ID of GSCV002 query the third version)\nuseVersions=GSVC002:GSF00494,GSF000496\
        \ (for omics data files with a CHAIN_ID of GSCV002 query only the specific\
        \ accessions GSF00494 and GSF000496)\n\nRules for multiple CHAIN_IDs can be\
        \ supplied to the parameter using the ; separator.\n\n## Paging\nFor performance\
        \ reasons this endpoint returns results in \"pages\" of limited size together\
        \ with a `cursor` tag. To retrieve the next page of results please supply\
        \ this `cursor` tag to resume the query from your previous result and get\
        \ the next page. If there are no more results you will just retrieve an empty\
        \ result.\n\n"
      operationId: "searchVariantGroups"
      produces:
        - "application/json"
      parameters:
        - name: "responseFormat"
          in: "query"
          description: "Supply this parameter with the value `term_id` as part of the\
          \ query to return extended information including IDs for values and dictionaries."
          required: false
          type: "string"
          enum:
            - "term_id"
        - name: "studyFilter"
          in: "query"
          description: "Filter by study metadata (key-value metadata pair(s)). E.g.\
          \ `\"Study Source\"=ArrayExpress`\n"
          required: false
          type: "string"
        - name: "studyQuery"
          in: "query"
          description: "Search for objects via a full-text query over all study metadata\
          \ fields. E.g. `\"RNA-Seq of human dendritic cells\"`. Queries matching\
          \ dictionary terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "sampleFilter"
          in: "query"
          description: "Filter by sample metadata (key-value metadata pair(s)). E.g.\
          \ `\"Species or strain\"=\"Homo sapiens\"`\n"
          required: false
          type: "string"
        - name: "sampleQuery"
          in: "query"
          description: "Search for objects via a full-text query over all sample metadata\
          \ fields. E.g. `Clozapine`. Queries matching dictionary terms are automatically\
          \ expanded to include synonyms."
          required: false
          type: "string"
        - name: "libraryFilter"
          in: "query"
          description: "Filter by library metadata (key-value metadata pair(s)). E.g.\
          \ `\"Library Type\"=RNA-Seq-1`"
          required: false
          type: "string"
        - name: "libraryQuery"
          in: "query"
          description: "Search for library objects via a full-text query over all library\
          \ metadata fields. E.g. `\"illumina HiSeq500\"`. Queries matching dictionary\
          \ terms are automatically expanded to include synonyms."
          required: false
          type: "string"
        - name: "preparationFilter"
          in: "query"
          description: "Filter by preparation metadata (key-value metadata pair(s)).\
          \ E.g. `Digestion=Trypsin`"
          required: false
          type: "string"
        - name: "preparationQuery"
          in: "query"
          description: "Search for preparation objects via a full-text query over all\
          \ preparation metadata fields. E.g. `\"reversed-phase liquid chromatography\"\
          `. Queries matching dictionary terms are automatically expanded to include\
          \ synonyms."
          required: false
          type: "string"
        - name: "searchSpecificTerms"
          in: "query"
          description: "If the full-text query term is present in an ODM dictionary,\
          \ enabling this parameter will modify the query to include child terms of\
          \ the full-text query.\n\nFor example, the search query \"Body fluid\" can\
          \ be expanded to include the term \"Blood\" (a child term of  \"Body fluid\"\
          ) so files containing either \"Body fluid\" or  \"Blood\"  in their metadata\
          \ will be returned in the search results.\n\nThe parent-child relationship\
          \ is defined by the key \"broaders\" or \"subClassOf\"  in the dictionary.\n\
          \nIf the full query term is not present in a dictionary then this parameter\
          \ has no effect."
          required: false
          type: "boolean"
        - name: "vxQuery"
          in: "query"
          description: "Search for objects linked to variant data via data query (key-value\
          \ pair(s)). E.g.  `VariationId=rs548419688|rs544419019`  `Intervals=12:23432-234324,30:234324-23432`\
          \ `Gene=ASPM,BRCA1`  `Reference=A|T Alteration=C|G` `Quality=(0.9:1.0)`\
          \  `Type=SNP|MNP|INS|DEL|MIXED`  `info_VT=DEL`  `info_EUR_AF=(0.9:1.0)`\
          \ `Start=12340` `AllelesNumber=1` `AlterationNumber=2`"
          required: false
          type: "string"
        - name: "vxFilter"
          in: "query"
          description: "Filter by variant metadata (key-value metadata pair(s)). E.g.\
          \ `\"Variant Source\"=dbSNP`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "exQuery"
          in: "query"
          description: "Search for objects linked to expression data and originally uploaded in GCT format via data query\
          \ (key-value pair(s)), e.g.,`feature=ENSG00000230368,ENSG00000188976 MinValue=1.50`\n"
          required: false
          type: "string"
        - name: "exFilter"
          in: "query"
          description: "Filter by expression metadata (key-value metadata pair(s)).\
          \ E.g. `\"Genome Version\"=hg19-BROAD`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "fxQuery"
          in: "query"
          description: "Search for objects linked to flow cytometry data via data query\
          \ (key-value pair(s)). E.g. `ReadoutType=Median|Count` `CellPopulation=\"\
          CD45+, live\"` `MinValue=3.5`"
          required: false
          type: "string"
        - name: "fxFilter"
          in: "query"
          description: "Filter by flow cytometry metadata (key-value metadata pair(s)).\
          \ E.g. `Organ=blood`. Retrieving individual runs via \"Run Source ID\"=\"HG00096\"\
          \  will be deprecated after June 2023. Use sampleFilter, libraryFilter or preparationFilter for retrieving an individual run"
          required: false
          type: "string"
        - name: "useVersions"
          in: "query"
          description: "Specify which versions of omics data files are used in the query.\
          \ By default the active version is used. See Versioning above. Syntax:\n\
          \n\\* or `v<version number>` or `<CHAIN_ID>`:`v<version number>` or `<CHAIN_ID>`:`<accession1,accession2,..>`"
          required: false
          type: "string"
        - name: "returnedMetadataFields"
          in: "query"
          description: "The parameter defines amount of metadata attributes to return:\n\
          \n1. `minimal_data` - return metadata attributes according to the default\
          \ template.\n2. `extended_data_included` - return metadata attributes according\
          \ to applied template, if object doesnâ€™t have applied template default template\
          \ will be used. This is the default for User endpoints.\n3. `original_data_included`\
          \ - return all metadata attributes with values and null attributes, if they\
          \ are present in the applied template. This is the default for Curator endpoints."
          required: false
          type: "string"
          enum:
            - "minimal_data"
            - "extended_data_included"
            - "original_data_included"
        - name: "cursor"
          in: "query"
          description: "The page tag to resume results from (see paging above)."
          required: false
          type: "string"
        - name: "pageLimit"
          in: "query"
          description: "How many results to retrieve per page. The default is 2000"
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "Omics query result."
          schema:
            $ref: "#/definitions/OmicsResponse"
        400:
          description: "Invalid data in request. See error message for details."
        401:
          description: "User is not authenticated. Please supply a valid Access Token in\
            \ the `Authorization` HTTP header (e.g. Authorization: bearer [token])\n or \
            \ Genestack API token in the `Genestack-API-Token` header (this token may be\
            \ obtained from the Genestack UI _Profile_ page)."
        500:
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
securityDefinitions:
  Access-token:
    type: "apiKey"
    name: "Authorization"
    in: "header"
  Genestack-API-Token:
    type: "apiKey"
    name: "Genestack-API-Token"
    in: "header"
definitions:
  BatchOfIds:
    type: "object"
    required:
      - "firstIds"
      - "firstType"
    properties:
      firstType:
        type: "string"
        example: "study"
        description: "Type of the objects."
      firstIds:
        type: "array"
        description: "Array of the object IDs with the same type."
        uniqueItems: true
        items:
          type: "string"
      offset:
        type: "integer"
        format: "int32"
        description: "Param says to skip that many links before beginning to return\
          \ links. Default: 0."
      limit:
        type: "integer"
        format: "int32"
        description: "Param says to limit the count of returned links. Default: 1000."
    description: "Request model for getting links by many IDs."
  DataItem:
    type: "object"
    properties:
      itemId:
        type: "string"
        readOnly: true
      metadata:
        readOnly: true
        $ref: "#/definitions/MetadataContent"
  DataPresentation:
    type: "object"
    properties:
      itemId:
        type: "string"
        readOnly: true
      metadata:
        readOnly: true
        $ref: "#/definitions/MetadataContent"
      relationships:
        readOnly: true
        $ref: "#/definitions/Relationships"
  IMetadata:
    type: "object"
    properties:
      source:
        type: "string"
        format: "uri"
      name:
        type: "string"
      public:
        type: "boolean"
      id:
        type: "string"
      content:
        $ref: "#/definitions/MetadataContent"
      dataType:
        type: "string"
      contentMap:
        type: "object"
        additionalProperties:
          type: "object"
      metadataContent:
        type: "object"
        additionalProperties:
          type: "object"
      fileIdAssociatedWithTemplate:
        type: "string"
  IntegrationHelper:
    type: "object"
  Library:
    type: "object"
  ListResponse:
    type: "object"
    properties:
      meta:
        $ref: "#/definitions/MetaResponse"
      data:
        type: "array"
        items:
          type: "object"
  MetaResponse:
    type: "object"
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
  MetadataContent:
    type: "object"
  MetadataPresentation:
    type: "object"
    properties:
      metadata:
        $ref: "#/definitions/IMetadata"
      relationships:
        readOnly: true
        $ref: "#/definitions/Relationships"
    description: "A description of object metadata.\n\nThis will contain:\n- `genestack:accession`:\
      \ the object ID\n- `Study Title` (for studies)\n- `Sample ID` (for samples)\n\
      - all other attributes defined in the linked template (if any)"
  MetadataWithId:
    type: "object"
    properties:
      itemId:
        type: "string"
        readOnly: true
      metadata:
        readOnly: true
        $ref: "#/definitions/MetadataContent"
  OmicsResponse:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          type: "object"
      resultsExhausted:
        type: "boolean"
      log:
        type: "array"
        items:
          type: "string"
      cursor:
        type: "string"
  OmicsResponseDataPresentation:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/DataPresentation"
      resultsExhausted:
        type: "boolean"
      log:
        type: "array"
        items:
          type: "string"
      cursor:
        type: "string"
  OmicsResponseMetadataPresentation:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/MetadataPresentation"
      resultsExhausted:
        type: "boolean"
      log:
        type: "array"
        items:
          type: "string"
      cursor:
        type: "string"
  OmicsResponseMetadataWithId:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/MetadataWithId"
      resultsExhausted:
        type: "boolean"
      log:
        type: "array"
        items:
          type: "string"
      cursor:
        type: "string"
  PaginationInfo:
    type: "object"
    properties:
      count:
        type: "integer"
        format: "int32"
      total:
        type: "integer"
        format: "int64"
      offset:
        type: "integer"
        format: "int32"
      limit:
        type: "integer"
        format: "int32"
  Preparation:
    type: "object"
  Relationships:
    type: "object"
    properties:
      sample:
        type: "string"
        readOnly: true
      cell:
        type: "string"
        readOnly: true
      library:
        type: "string"
        readOnly: true
      preparation:
        type: "string"
        readOnly: true
  SourceTypePair:
    type: "object"
    properties:
      firstType:
        type: "string"
        description: "Type of the object (e.g. study)"
        readOnly: true
      secondType:
        type: "string"
        description: "Type of the object (e.g. study)"
        readOnly: true
  StreamingOutput:
    type: "object"
  Study:
    type: "object"
  SearchStudyRequest:
    type: "object"
    properties:
      filters:
        type: "array"
        items:
          $ref: "#/definitions/AppliedFilter"
        example:
          - type: "FULL_TEXT"
            match: "text_to_search"
            mode: "STRICT"
          - type: "SELECT"
            filterOptionId: "TUVUQURBVEFfU3R1ZHlfU291cmNlOlRlc3QgR0VP"
      page:
        $ref: "#/definitions/PageRequest"
  AppliedFilter:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
          - "FULL_TEXT"
          - "SELECT"
      filterOptionId:
        type: "string"
      match:
        type: "string"
      mode:
        type: "string"
        enum:
          - "STRICT"
          - "USE_NARROWER_TERMS"
  PageRequest:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
        description: "Param says to skip that many links before beginning to return\
          \ links. Default: 0."
      limit:
        type: "integer"
        format: "int32"
        description: "Param says to limit the count of returned links. Default: 1000."
        example: 50
  FindObjectsResponse:
    type: "object"
    properties:
      objectsPage:
        $ref: "#/definitions/ObjectsPage"
      filterOptionGroups:
        type: "array"
        items:
          $ref: "#/definitions/FilterOptionGroup"
  ObjectsPage:
    type: "object"
    properties:
      filteredCount:
        type: "integer"
        format: "int64"
      pageRequest:
        $ref: "#/definitions/PageRequest"
      content:
        type: "array"
        items:
          $ref: "#/definitions/StudySearchInfo"
  StudySearchInfo:
    type: "object"
    properties:
      accession:
        type: "string"
      name:
        type: "string"
      owner:
        type: "string"
      fileCreation:
        type: "string"
        format: "int64"
      size:
        type: "integer"
        format: "int64"
      hasFacs:
        type: "boolean"
      hasGenomic:
        type: "boolean"
      hasTranscriptomics:
        type: "boolean"
      summary:
        type: "array"
        items:
          $ref: "#/definitions/MetainfoKeyForSummary"
  MetainfoKeyForSummary:
    type: "object"
    properties:
      key:
        type: "string"
      values:
        type: "array"
        items:
          type: "string"
  FilterOptionGroup:
    type: "object"
    properties:
      filterId:
        type: "string"
      hasMoreOptions:
        type: "boolean"
      options:
        type: "array"
        items:
          $ref: "#/definitions/FilterOption"
  FilterOption:
    type: "object"
    properties:
      id:
        type: "string"
      filterId:
        type: "string"
      name:
        type: "string"
      count:
        type: "integer"
        format: "int64"
