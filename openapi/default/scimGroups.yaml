openapi: 3.1.0
info:
  description: "This swagger page describes the API endpoints to add, edit and remove\
    \ groups. The endpoints are developed according to the SCIM 2.0 specification."
  title: ODM API
  version: default-released
servers:
- url: https://unused/
tags:
- name: Groups
paths:
  /frontend/rs/genestack/scim-integration/default-released/scim/Groups:
    get:
      description: |-
        The endpoint returns a list of groups that the user has access to: where the user is a member of the group or if the user has the "Manage Groups" permission, then a list of all groups.
         The list can be filtered by group attributes using the filter parameter. If no filtering parameters are passed, then all available groups are returned. If there are no groups in the response body, the endpoint returns 200 OK.
      operationId: findGroups
      parameters:
      - description: |-
          Filter by group attributes. The parameter name is case-sensitive, therefore parameters FILTER, fiLter, and other options are ignored.
           Supported operators:
           &nbsp;&nbsp;eq - equal, the attribute and operator values must be identical for a match;
           &nbsp;&nbsp;Using other operators returns an error.
           Groups can be filtered by displayName only.
           Attribute names and attribute operators used in filters are case insensitive.
           Examples of the request:
           &nbsp;&nbsp;filter=displayName eq "Curator".
        in: query
        name: filter
        schema:
          type: string
      - description: "If excludedAttributes=members is specified in the request, groups\
          \ are returned without the members attribute. Other attributes are not supported\
          \ in excludedAttributes parameter and ignored in the request → all attributes\
          \ are returned in the response body."
        in: query
        name: excludedAttributes
        schema:
          type: string
      - description: The 1-based index of the first result in the current set of list
          results.
        in: query
        name: startIndex
        schema:
          format: int32
          type: integer
      - description: The number of resources returned in a list response page. The
          value by default is 100.
        in: query
        name: count
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/FilterGroupsResponse'
          description: The request was successful.
        "400":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/SCIMErrorResponse'
          description: Incorrect syntax in the request. See the error message for
            details.
        "401":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
          description: |-
            User is not authenticated. Please supply a valid Access Token in the `Authorization` HTTP header (e.g. Authorization: bearer [token])
             or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
      - Access-token: []
      - Genestack-API-Token: []
      summary: Retrieve a list of available groups
      tags:
      - Groups
    post:
      description: |-
        The endpoint creates a new user group in ODM. The endpoint does not update an existing group. A user who calls the endpoint is added to the group automatically with the "Group admin" role. The "members" attribute in the request body must be empty, otherwise the endpoint returns an error.
         The endpoint does not require any user permission.
         The endpoint does not check the uniqueness of the group name. The user can create any number of groups with the same name.
         If there are attributes in the request body that ODM does not support, then ODM ignores them.
      operationId: createGroup
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "201":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
          description: The operation is successful. The response body contains the
            representation of the newly created group.
        "400":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/SCIMErrorResponse'
          description: "The object cannot be created, the supplied data or metadata\
            \ are incorrect. See the error message for details."
        "401":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
          description: |-
            User is not authenticated. Please supply a valid Access Token in the `Authorization` HTTP header (e.g. Authorization: bearer [token])
             or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
        "409":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/SCIMErrorResponse'
          description: "The object cannot be created, data conflict. See the error\
            \ message for details."
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
      - Genestack-API-Token: []
      - Access-token: []
      summary: Add a new user group
      tags:
      - Groups
      x-codegen-request-body-name: body
  /frontend/rs/genestack/scim-integration/default-released/scim/Groups/{id}:
    delete:
      description: |-
        The endpoint deletes a group in ODM. The group can be deleted, even if it has members: admins and not admins. Users of this group are not deactivated.
         Permissions to call the endpoint:
         &nbsp;&nbsp;- If the user does not have the "Manage groups" permission:
         &nbsp;&nbsp;&nbsp;&nbsp;* the user has "Group admin" role - the user can delete the group;
         &nbsp;&nbsp;&nbsp;&nbsp;* the user has "Group member" role - the group can not be deleted, an error is returned;
         &nbsp;&nbsp;&nbsp;&nbsp;* the user is not a member of the specified group - the group can not be deleted, an error is returned.
         &nbsp;&nbsp;- If the user has the "Manage groups" permission - the user can delete the group regardless of user’s membership in this group.
      operationId: deleteGroup
      parameters:
      - description: "String, unique identifier of the group in ODM."
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The group has been successfully removed. No data is returned.
        "400":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/SCIMErrorResponse'
          description: The supplied group ID is invalid.
        "401":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
          description: |-
            User is not authenticated. Please supply a valid Access Token in the `Authorization` HTTP header (e.g. Authorization: bearer [token])
             or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
        "403":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/SCIMErrorResponse'
          description: Operation is not permitted. The "Group admin" role in the group
            or the "Manage groups" permission is required.
        "404":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/SCIMErrorResponse'
          description: There are no groups with the specified id.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
      - Genestack-API-Token: []
      - Access-token: []
      summary: Delete a group
      tags:
      - Groups
    get:
      description: |-
        The endpoint returns a not deleted group by id, where id is an internal group id in ODM. Access to the group is required:
         &nbsp;&nbsp;- If the user has the "Manage groups" permission, the endpoint returns not deleted group on the instance regardless of user’s membership in this group;
         &nbsp;&nbsp;- If the user does not have the "Manage groups" permission, the endpoint returns only groups in which the user is a member. Otherwise, 404 Not Found is returned.
      operationId: getGroup
      parameters:
      - description: "String, unique identifier of the group in ODM."
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "If excludedAttributes=members is specified in the request, Groups\
          \ are returned without the members attribute. Other attributes are not supported\
          \ in excludedAttributes parameter and ignored in the request → all attributes\
          \ are returned in the response body."
        in: query
        name: excludedAttributes
        schema:
          type: string
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
          description: The request was successful.
        "400":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/SCIMErrorResponse'
          description: The supplied group ID is invalid.
        "401":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
          description: |-
            User is not authenticated. Please supply a valid Access Token in the `Authorization` HTTP header (e.g. Authorization: bearer [token])
             or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
        "404":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/SCIMErrorResponse'
          description: There are no available groups with the specified id.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
      - Access-token: []
      - Genestack-API-Token: []
      summary: Retrieve a group by id
      tags:
      - Groups
    patch:
      description: |-
        The endpoint updates one or several attributes of a specific group, where id is internal group id in ODM. Also the endpoints adds a new user to the group and removes users from the group.

         Supported operators in the request body: replace, add, remove. For details of the syntax of using these operators, we recommend that you refer to the SCIM 2.0 specification.

         The list of group attributes that can be edited: displayName, externalId, members. If the user tries to edit other attributes, e.g. id, an error is returned. If the user tries to edit attributes that are not supported in the ODM group scheme, this attribute is ignored. If the request body includes only attributes that are not supported by ODM, the endpoint returns 200 OK.

         A PATCH request, regardless of the number of operations, is treated as atomic. If a single operation encounters an error condition, the original user attributes are restored, and a failure status is returned.

         The endpoint requires access to the group as admin of the group: the user has the "Admin group" role in the group or the user has the "Manage groups" permission.
      operationId: patchGroup
      parameters:
      - description: "String, unique identifier of the group in ODM."
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GroupPatch'
        required: true
      responses:
        "204":
          content: {}
          description: Group is successfully updated. No data is returned
        "400":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/SCIMErrorResponse'
          description: "The object cannot be updated, the supplied data or metadata\
            \ are incorrect. See the error message for details."
        "401":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
          description: |-
            User is not authenticated. Please supply a valid Access Token in the `Authorization` HTTP header (e.g. Authorization: bearer [token])
             or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
        "403":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/SCIMErrorResponse'
          description: Operation is not permitted. The "Group admin" role in the group
            or the "Manage groups" permission is required.
        "404":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/SCIMErrorResponse'
          description: There are no groups with the specified id.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
      - Genestack-API-Token: []
      - Access-token: []
      summary: Update a group
      tags:
      - Groups
      x-codegen-request-body-name: body
components:
  schemas:
    Group:
      example:
        displayName: displayName
        schemas:
        - urn:ietf:params:scim:schemas:core:2.0:Group
        - urn:ietf:params:scim:schemas:core:2.0:Group
        members:
        - display: display
          value: value
          $ref: https://openapi-generator.tech
        - display: display
          value: value
          $ref: https://openapi-generator.tech
        externalId: externalId
        id: id
      properties:
        externalId:
          description: External unique resource id
          type: string
        id:
          description: Unique resource id
          type: string
        schemas:
          items:
            enum:
            - urn:ietf:params:scim:schemas:core:2.0:Group
            type: string
          type: array
        members:
          items:
            $ref: '#/components/schemas/Member'
          type: array
        displayName:
          type: string
      required:
      - displayName
      type: object
    Member:
      example:
        display: display
        value: value
        $ref: https://openapi-generator.tech
      properties:
        value:
          type: string
        display:
          type: string
        $ref:
          description: The URI of the member resource
          format: uri
          type: string
      required:
      - $ref
      - value
      type: object
    GroupPatch:
      example:
        schemas:
        - urn:ietf:params:scim:api:messages:2.0:PatchOp
        - urn:ietf:params:scim:api:messages:2.0:PatchOp
        Operations:
        - op: add
          path: path
          value: "{}"
        - op: add
          path: path
          value: "{}"
      properties:
        Operations:
          description: Patch operations list
          items:
            $ref: '#/components/schemas/PatchOperation'
          type: array
        schemas:
          items:
            enum:
            - urn:ietf:params:scim:api:messages:2.0:PatchOp
            type: string
          type: array
      required:
      - Operations
      - schemas
      type: object
    PatchOperation:
      example:
        op: add
        path: path
        value: "{}"
      properties:
        op:
          enum:
          - add
          - replace
          - remove
          type: string
        path:
          type: string
        value:
          description: Corresponding 'value' of that field specified by 'path'
          properties: {}
          type: object
      required:
      - op
      type: object
    FilterGroupsResponse:
      properties:
        Resources:
          description: List of groups
          items:
            $ref: '#/components/schemas/GroupResponse'
          type: array
        itemsPerPage:
          format: int64
          type: integer
        schemas:
          items:
            enum:
            - urn:ietf:params:scim:api:messages:2.0:ListResponse
            type: string
          type: array
        startIndex:
          format: int64
          type: integer
        totalResults:
          format: int64
          type: integer
      type: object
    GroupResponse:
      allOf:
      - $ref: '#/components/schemas/Group'
      - properties:
          meta:
            $ref: '#/components/schemas/Meta'
        type: object
    Meta:
      description: resource metadata
      properties:
        created:
          format: date-time
          type: string
        lastModified:
          format: date-time
          type: string
        resourceType:
          enum:
          - User
          - Group
          type: string
      type: object
    SCIMErrorResponse:
      properties:
        detail:
          description: Detailed error message
          type: string
        schemas:
          items:
            enum:
            - urn:ietf:params:scim:api:messages:2.0:Error
            type: string
          type: array
        scimType:
          description: Bad request type when status code is 400
          enum:
          - uniqueness
          - tooMany
          - mutability
          - sensitive
          - invalidSyntax
          - invalidFilter
          - invalidPath
          - invalidValue
          - invalidVers
          - noTarget
          type: string
        status:
          description: "Same as HTTP status code, e.g. 400, 403, etc."
          type: string
      required:
      - status
      type: object
    BaseErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - error
      type: object
    ErrorMessage:
      properties:
        message:
          description: Detailed error message
          type: string
      required:
      - message
      type: object
  securitySchemes:
    Access-token:
      in: header
      name: Authorization
      type: apiKey
    Genestack-API-Token:
      in: header
      name: Genestack-API-Token
      type: apiKey
x-original-swagger-version: "2.0"
