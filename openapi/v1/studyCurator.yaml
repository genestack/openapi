openapi: 3.1.0
info:
  description: |-
    This swagger page describes the studyCurator APIs.

    Before carrying out any API calls you will need an API token. API tokens can be obtained under your profile within the Genestack software.

    To try out calls in this swagger page:

    1. Click the 'Authorize' button below to enter your API token
    2. Scroll to the 'Parameters' section for the method you wish to try out and click the 'Try it out' button
    3. Enter parameter values that you wish to try
    4. Scroll to the bottom of the Parameters section and click the 'Execute' bar that appears

    The server response will be in the section that follows.
  title: ODM API
  version: default-released
tags:
- name: Study SPoT
paths:
  /frontend/rs/genestack/studyCurator/default-released/studies:
    get:
      description: |-
        Retrieve study metadata objects by searching/listing study metadata.

        ## Metadata full-text queries
        Single words can be supplied as is, otherwise use speech marks (`"`) to quote queries that include whitespace. Speech marks and backslash characters in the query need to be escaped with a backslash (`\`).

        ## Metadata filters
        Metadata filters are key-value pairs joined by an operator. The `=` operator matches literal values/string. The `!=` operator matches anything except the literal value/string. The `<` or `>` operators match numerical results that are less or greater than the supplied value. Strings containing whitespace need to be quoted with (`"`).

        ## Combinations
        Metadata queries/filters for the same parameter can be combined with `&&`, `AND`, `||` and `OR` operators, using white-space to separate out the terms and operators. Parentheses `( )` can be used for complex expressions.

        ## Paging
        For performance reasons this endpoint returns results in "pages" of limited size. In order to retrieve all matching results the client needs to request multiple pages starting from an offset to the first result. You can do this using the pageOffset query parameter. A value of 0 (the default) instructs the server to return the first page of results, 100 would return a page of results starting from the 101st result and so on. To return all results iterate through pages using pageOffset values of `n * pageLimit` until the `resultsExhausted` response field is true.

        ## List operation

        This endpoint can be called with no `query` parameter. Doing so returns a list of all study objects.
      operationId: searchStudies
      parameters:
      - description: Supply this parameter with the value `term_id` as part of the
          query to return extended information including IDs for values and dictionaries.
        in: query
        name: responseFormat
        schema:
          enum:
          - term_id
          type: string
      - description: |+
          Filter by study metadata (key-value metadata pair(s)). E.g. `"Study Source"=ArrayExpress`


        in: query
        name: filter
        schema:
          type: string
      - description: Search for study objects via a full-text query over all study
          metadata fields. E.g. `"RNA-Seq of human dendritic cells"`. Queries matching
          dictionary terms are automatically expanded to include synonyms.
        in: query
        name: query
        schema:
          type: string
      - description: |-
          If the full-text query term is present in an ODM dictionary, enabling this parameter will modify the query to include child terms of the full-text query.

          For example, the search query "Body fluid" can be expanded to include the term "Blood" (a child term of  "Body fluid") so files containing either "Body fluid" or  "Blood"  in their metadata will be returned in the search results.

          The parent-child relationship is defined by the key "broaders" or "subClassOf" in the dictionary.

          If the full query term is not present in a dictionary then this parameter has no effect.
        in: query
        name: searchSpecificTerms
        schema:
          type: boolean
      - description: |-
          The parameter defines amount of metadata attributes to return:

          1. `minimal_data` - return metadata attributes according to the default template.
          2. `extended_data_included` - return metadata attributes according to applied template, if object doesnâ€™t have applied template, default template will be used. This is the default for User endpoints.
          3. `original_data_included` - return all metadata attributes with values and null attributes, if they are present in the applied template. This is the default for Curator endpoints.
        in: query
        name: returnedMetadataFields
        schema:
          enum:
          - minimal_data
          - extended_data_included
          - original_data_included
          type: string
      - description: |-
          Attribute to sort by, with optional ascending/descending marker, of the form `"[+|-]<key_name>"`.

          No marker or `"+"` indicates ascending sort, and `"-"` indicates descending sort.

          *Default:* sort by ID in ascending order.
        in: query
        name: sort
        schema:
          enum:
          - id
          - creation
          - last_update
          - name
          - +id
          - +creation
          - +last_update
          - +name
          - -id
          - -creation
          - -last_update
          - -name
          type: string
      - description: Maximum number of results to return. This value must be between
          0 and 2000 (inclusive).
        in: query
        name: pageLimit
        schema:
          format: int32
          type: integer
      - description: "Show the page {pageOffset+1} results from the start of the results.\
          \ E.g. 100 will show a page of results  starting from the 101st result.\
          \ The default value is 0."
        in: query
        name: pageOffset
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse'
            text/tab-separated-values:
              schema:
                $ref: '#/components/schemas/ListResponse'
          description: The request was successful. The returned value is a list of
            objects.
        "401":
          content: {}
          description: |-
            User is not authenticated. Please supply a valid Access Token in the `Authorization` HTTP header (e.g. Authorization: bearer [token])
             or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
        "500":
          content: {}
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
      - Access-token: []
      - Genestack-API-Token: []
      summary: List or search for study metadata objects
      tags:
      - Study SPoT
    post:
      description: |-
        ## Data
         This operation requires the URL of a Study metadata file.  This will be used as the original metadata for the created study.
         ## Metadata file format
         * Extension: any, `.zip` and `.gz` extensions are treated as archives and get decompressed
         * Format: plain text, Tab-separated format (TSV), attribute names and record values are separated  with tabs (`U+0009`),  lines are separated with `CRLF` sequence (`U+000D U+000A`)
         * Header: the first line is treated as table header that contains attribute names
         * Records: the second line contains the values for each of the attributes described in the header line.  Values represent single string or list of strings. List values are separated  using the "pipe" `|` (`U+007C`)  separator. Values are trimmed of whitespace before parsing, and a literal `|`  (`U+007C`) character may be escaped by repeating it twice.
         ## File sources
         * Supported external sources (links): `http`/`https`/`ftp`
      operationId: addStudy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyGenericSource'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Study'
          description: Object successfully created.
        "400":
          content: {}
          description: The object cannot be created. This error occurs when the supplied
            data or metadata are incorrect. Please see error message for details.
        "401":
          content: {}
          description: |-
            User is not authenticated. Please supply a valid Access Token in the `Authorization` HTTP header (e.g. Authorization: bearer [token])
             or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
        "500":
          content: {}
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
      - Access-token: []
      - Genestack-API-Token: []
      summary: Add new study object
      tags:
      - Study SPoT
      x-codegen-request-body-name: source
  /frontend/rs/genestack/studyCurator/default-released/studies/{id}:
    delete:
      operationId: deleteStudy
      parameters:
      - description: Unique identifier (accession) of the object.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The object has been successfully deleted. No data is returned.
        "400":
          content: {}
          description: The supplied object ID is invalid.
        "401":
          content: {}
          description: |-
            User is not authenticated. Please supply a valid Access Token in the `Authorization` HTTP header (e.g. Authorization: bearer [token])
             or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
        "404":
          content: {}
          description: No object exists with the given ID.
        "500":
          content: {}
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
      - Access-token: []
      - Genestack-API-Token: []
      summary: Delete a given study object. This will not delete related objects or
        links to related objects.
      tags:
      - Study SPoT
    get:
      operationId: getStudy
      parameters:
      - description: Supply this parameter with the value `term_id` as part of the
          query to return extended information including IDs for values and dictionaries.
        in: query
        name: responseFormat
        schema:
          enum:
          - term_id
          type: string
      - description: Unique identifier (accession) of the object.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: |-
          The parameter defines amount of metadata attributes to return:

          1. `minimal_data` - return metadata attributes according to the default template.
          2. `extended_data_included` - return metadata attributes according to applied template, if object doesnâ€™t have applied template, default template will be used. This is the default for User endpoints.
          3. `original_data_included` - return all metadata attributes with values and null attributes, if they are present in the applied template. This is the default for Curator endpoints.
        in: query
        name: returnedMetadataFields
        schema:
          enum:
          - minimal_data
          - extended_data_included
          - original_data_included
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Study'
          description: The request was successful. The returned value is the object.
        "400":
          content: {}
          description: The supplied object ID is invalid.
        "401":
          content: {}
          description: |-
            User is not authenticated. Please supply a valid Access Token in the `Authorization` HTTP header (e.g. Authorization: bearer [token])
             or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
        "404":
          content: {}
          description: No object exists with the given ID.
        "500":
          content: {}
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
      - Access-token: []
      - Genestack-API-Token: []
      summary: Retrieve a single study object by ID (accession)
      tags:
      - Study SPoT
    patch:
      description: |-
        ## Basic operation
        The object metadata is updated using the supplied map of attribute names to attribute values. There are three cases:
        1. The attribute name does not already exist in the object metadata. In this case, the attribute and value are added to the object metadata.
        2. The attribute name already exists in the object metadata. In this case, the value is updated.
        3. The attribute value is `null`.In this case, the attribute is removed from the object metadata.

        ## Attribute values
        The attribute values are intelligently parsed as booleans, integers, etc.
      operationId: updateStudy
      parameters:
      - description: Unique identifier (accession) of the object.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataContent'
        description: "Metadata in the form of `{key: value, key2: value2, ...}`"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Study'
          description: "The objects was successfully created. The returned value is\
            \ the updated object, along with any warnings."
        "400":
          content: {}
          description: The supplied object ID or metadata is invalid.
        "401":
          content: {}
          description: |-
            User is not authenticated. Please supply a valid Access Token in the `Authorization` HTTP header (e.g. Authorization: bearer [token])
             or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
        "404":
          content: {}
          description: No object exists with the given ID.
        "500":
          content: {}
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
      - Access-token: []
      - Genestack-API-Token: []
      summary: Update a study object
      tags:
      - Study SPoT
      x-codegen-request-body-name: body
  /frontend/rs/genestack/studyCurator/default-released/studies/{id}/versions:
    get:
      operationId: getStudyVersions
      parameters:
      - description: Unique identifier (accession) of the object.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommitInfo'
                type: array
          description: The request was successful. The returned value is the list
            of  object versions.
        "401":
          content: {}
          description: |-
            User is not authenticated. Please supply a valid Access Token in the `Authorization` HTTP header (e.g. Authorization: bearer [token])
             or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
        "500":
          content: {}
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
      - Access-token: []
      - Genestack-API-Token: []
      summary: Retrieve a list of object versions by ID
      tags:
      - Study SPoT
  /frontend/rs/genestack/studyCurator/default-released/studies/{id}/versions/{version}:
    get:
      operationId: getStudyByVersion
      parameters:
      - description: Supply this parameter with the value `term_id` as part of the
          query to return extended information including IDs for values and dictionaries.
        in: query
        name: responseFormat
        schema:
          enum:
          - term_id
          type: string
      - description: Unique identifier (accession) of the object.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Unique version of the object.
        in: path
        name: version
        required: true
        schema:
          type: string
      - description: |-
          The parameter defines amount of metadata attributes to return:

          1. `minimal_data` - return metadata attributes according to the default template.
          2. `extended_data_included` - return metadata attributes according to applied template, if object doesnâ€™t have applied template, default template will be used. This is the default for User endpoints.
          3. `original_data_included` - return all metadata attributes with values and null attributes, if they are present in the applied template. This is the default for Curator endpoints.
        in: query
        name: returnedMetadataFields
        schema:
          enum:
          - minimal_data
          - extended_data_included
          - original_data_included
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Study'
          description: The request was successful. The returned value is the object.
        "400":
          content: {}
          description: The supplied object ID is invalid.
        "401":
          content: {}
          description: |-
            User is not authenticated. Please supply a valid Access Token in the `Authorization` HTTP header (e.g. Authorization: bearer [token])
             or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
        "404":
          content: {}
          description: No object exists with the given ID.
        "500":
          content: {}
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
      - Access-token: []
      - Genestack-API-Token: []
      summary: Retrieve a single study object by ID (accession)
      tags:
      - Study SPoT
components:
  schemas:
    CommitInfo:
      example:
        author: author
        message: message
        version: version
        timestamp: 0
      properties:
        author:
          type: string
        message:
          type: string
        timestamp:
          format: int64
          type: integer
        version:
          readOnly: true
          type: string
      type: object
    IntegrationHelper:
      type: object
    ListResponse:
      example:
        data:
        - "{}"
        - "{}"
        meta:
          pagination:
            total: 6
            offset: 1
            count: 0
            limit: 5
      properties:
        meta:
          $ref: '#/components/schemas/MetaResponse'
        data:
          items:
            properties: {}
            type: object
          type: array
      type: object
    MetaResponse:
      example:
        pagination:
          total: 6
          offset: 1
          count: 0
          limit: 5
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationInfo'
      type: object
    MetadataContent:
      type: object
    PaginationInfo:
      example:
        total: 6
        offset: 1
        count: 0
        limit: 5
      properties:
        count:
          format: int32
          type: integer
        total:
          format: int64
          type: integer
        offset:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
      type: object
    Study:
      type: object
    StudyGenericSource:
      example:
        link: https://inception-dev.genestack.com/studies/my_stydy.csv
      properties:
        link:
          description: URL for a file with Study metadata.
          example: https://inception-dev.genestack.com/studies/my_stydy.csv
          type: string
        templateId:
          description: ID of template file.
          example: GSF000001
          readOnly: true
          type: string
      required:
      - link
      type: object
  securitySchemes:
    Access-token:
      in: header
      name: Authorization
      type: apiKey
    Genestack-API-Token:
      in: header
      name: Genestack-API-Token
      type: apiKey
x-original-swagger-version: "2.0"
