get:
  operationId: getPreparationsByGroupAsCurator
  parameters:
    - description: >-
        Supply this parameter with the value `term_id` as part of the query to
        return extended information including IDs for values and dictionaries.
      in: query
      name: responseFormat
      schema:
        enum:
          - term_id
        type: string
    - description: Unique identifier (accession) of the object.
      in: path
      name: id
      required: true
      schema:
        type: string
    - description: >-
        The parameter defines amount of metadata attributes to return:


        1. `minimal_data` - return metadata attributes according to the default
        template.

        2. `extended_data_included` - return metadata attributes according to
        applied template, if object doesnâ€™t have applied template, default
        template will be used. This is the default for User endpoints.

        3. `original_data_included` - return all metadata attributes with values
        and null attributes, if they are present in the applied template. This
        is the default for Curator endpoints.
      in: query
      name: returnedMetadataFields
      schema:
        enum:
          - minimal_data
          - extended_data_included
          - original_data_included
        type: string
    - description: >-
        Show the page {pageOffset+1} results from the start of the results. E.g.
        100 will show a page of results  starting from the 101st result. The
        default value is 0.
      in: query
      name: pageOffset
      schema:
        format: int32
        type: integer
    - description: >-
        Maximum number of results to return per page (see Paging above). This
        value must be between 0 and 2000 (inclusive). The default is 2000.
      in: query
      name: pageLimit
      schema:
        format: int32
        type: integer
  responses:
    '200':
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ListResponse"
      description: The request was successful. The returned value is a list of objects.
    '400':
      content: {}
      description: The supplied object ID is invalid.
    '401':
      content: {}
      description: >-
        User is not authenticated. Please supply a valid Access Token in the
        `Authorization` HTTP header (e.g. Authorization: bearer [token])
         or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
    '404':
      content: {}
      description: No object exists with the given ID.
    '500':
      content: {}
      description: >-
        An internal server error occurred. This indicates an unexpected failure
        in the Genestack system, please file a bug report to
        support@genestack.com, including the error details.
  security:
    - Access-token: []
    - Genestack-API-Token: []
  summary: Retrieve preparations related to the given group
  tags:
    - Preparation SPoT as Curator
components:
  schemas:
    ListResponse:
      $ref: ../components/schemas/ListResponse.yaml