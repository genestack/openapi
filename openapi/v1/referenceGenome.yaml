openapi: 3.1.0
info:
  description: |-
    These API endpoints serve to upload and remove reference genomes as well as search and get details about them.
  title: ODM API
  version: default-released
tags:
  - name: Reference genome
paths:
  /api/v1/reference-genomes:
    get:
      operationId: searchRG
      summary: List or search for Reference Genome objects
      tags:
        - Reference genome
      description: |-
        Retrieve Reference Genome metadata objects by searching/listing Reference Genome metadata.

        ## Metadata full-text queries
        Single words can be supplied as is, otherwise use speech marks (`"`) to quote queries that include whitespace. Speech marks and backslash characters in the query need to be escaped with a backslash (`\`).

        ## Metadata filters
        Metadata filters are key-value pairs joined by an operator. The `=` operator matches literal values/string. The `!=` operator matches anything except the literal value/string. The `<` or `>` operators match numerical results that are less or greater than the supplied value. Strings containing whitespace need to be quoted with (`"`).

        ## Combinations
        Metadata queries/filters for the same parameter can be combined with `&&`, `AND`, `||` and `OR` operators, using white-space to separate out the terms and operators. Parentheses `( )` can be used for complex expressions.

        ## Paging
        For performance reasons this endpoint returns results in "pages" of limited size. In order to retrieve all matching results the client needs to request multiple pages starting from an offset to the first result. You can do this using the pageOffset query parameter. A value of 0 (the default) instructs the server to return the first page of results, 100 would return a page of results starting from the 101st result and so on. To return all results iterate through pages using pageOffset values of `n * pageLimit` until the `resultsExhausted` response field is true.

        ## List operation

        This endpoint can be called with no `query` parameter. Doing so returns a list of all Reference Genome objects.
      parameters:
        - in: query
          name: organism
          description: Scientific name of the organism
          schema:
            type: string
        - in: query
          name: assembly
          description: Major version (for example, `GRCh38`).
          schema:
            type: string
        - in: query
          name: release
          description: Ensembl reference genome minor version (for example, `75` or `109`).
          schema:
            type: string
        - in: query
          name: query
          description: Search for Reference Genome objects via a full-text query over all Reference Genome metadata fields.
          schema:
            type: string
        - in: query
          name: pageLimit
          description: Maximum number of results to return per page (see Paging above). This value must be
            between 0 and 2000 (inclusive). The default is 2000.
          schema:
            format: int32
            type: integer
        - in: query
          name: pageOffset
          description: Show the page {pageOffset+1} results from the start of the results. E.g. 100 will show
            a page of results starting from the 101st result. The default value is 0.
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListResponse"
          description: The request was successful. The returned value is a list of objects.
        "401":
          content: { }
          description: |-
            User is not authenticated. Please supply a valid Access Token in the `Authorization` HTTP header (e.g. Authorization: bearer [token])
             or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
        "500":
          content: { }
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
    post:
      operationId: upload
      summary: Upload reference genome to ODM
      tags:
        - Reference genome
      description: |-
        In order to import reference genome file, please fill in the following fields:

        * `annotationUrl` - link to the non-vertebrae organism or any custom reference genome in .gtf format, archived in `.gz` format.
        Note: if any of the parameters below are not corresponding to the available Ensembl data (for example, organism name or assembly is changed), the link must be provided.
        * `species` - scientific name with the first uppercase letter and underscore as a delimiter (default: Homo_sapiens).
        Please see the list of available organisms [here](https://www.ensembl.org/info/about/species.html).
        Note: for some specific cases (Canis lupus breeds, Mus musculus strains, etc.) please see the species folders name in the Ensembl FTP (release 109) to provide the same organism name as shown in the list.
        * `assembly` - major version (for example, `GRCh38`). Please see the list of available assemblies [here](https://www.ensembl.org/info/website/archives/assembly.html).
        * `release` - Ensembl reference genome minor version (for example, `75` or `109`).
        * `name` - customized reference genome title that is used for linkage variant files.
        By default is combined from species, assembly and release parameters: `{species} reference genome {assembly}.{release}`.

        Reference genome will be available after initialisation. Please track initialisation task status.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UploadRGRequest"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessionResponse"
          description: The object was successfully created.
        "400":
          content: { }
          description: The object cannot be created. This error occurs when the supplied
            data or metadata are incorrect. Please see error message for details.
        "401":
          content: { }
          description: |-
            User is not authenticated. Please supply a valid Access Token in the `Authorization` HTTP header (e.g. Authorization: bearer [token])
             or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
        "403":
          content: { }
          description: Not enough permissions to call method.
        "500":
          content: { }
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
      x-codegen-request-body-name: body
  /api/v1/reference-genomes/{id}:
    get:
      operationId: getRG
      summary: Retrieve a single Reference Genome object by ID (accession)
      tags:
        - Reference genome
      parameters:
        - in: path
          name: id
          description:  Unique identifier (Genestack accession) of Reference Genome object.
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RGItem"
          description: The request was successful. The returned value is the object.
        "401":
          content: { }
          description: |-
            User is not authenticated. Please supply a valid Access Token in the `Authorization` HTTP header (e.g. Authorization: bearer [token])
             or  Genestack API token in the `Genestack-API-Token` header (this token may be obtained from the Genestack UI _Profile_ page).
        "404":
          content: { }
          description: No object exists with the given ID.
        "500":
          content: { }
          description: "An internal server error occurred. This indicates an unexpected\
            \ failure in the Genestack system, please file a bug report to support@genestack.com,\
            \ including the error details."
      security:
        - Access-token: [ ]
        - Genestack-API-Token: [ ]
components:
  schemas:
    UploadRGRequest:
      $ref: "./schemas/reference-genome/UploadRGRequest.yaml"
    AccessionResponse:
      $ref: "./schemas/common/AccessionResponse.yaml"
    ListResponse:
      $ref: "./schemas/common/ListResponse.yaml"
    RGItem:
      $ref: "./schemas/reference-genome/RGItem.yaml"
  securitySchemes:
    Access-token:
      in: header
      name: Authorization
      type: apiKey
    Genestack-API-Token:
      in: header
      name: Genestack-API-Token
      type: apiKey
